
Stack.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001218  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b8  080013c8  080013c8  000113c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001480  08001480  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001480  08001480  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001480  08001480  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001480  08001480  00011480  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001484  08001484  00011484  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001488  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  080014ec  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  080014ec  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000218e  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000005d9  00000000  00000000  00022222  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000130  00000000  00000000  00022800  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000f8  00000000  00000000  00022930  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000029c8  00000000  00000000  00022a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000120d  00000000  00000000  000253f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009169  00000000  00000000  000265fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f766  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000af4  00000000  00000000  0002f7e4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080013b0 	.word	0x080013b0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	080013b0 	.word	0x080013b0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <add_fun>:
#define STACK_MSP_END   (STACK_MSP_START - 512)
#define STACK_PSP_START  STACK_MSP_END
#define STACK_PSP_END   (STACK_PSP_START - 512)

int add_fun(int a, int b, int c, int d)
{
 8000290:	b480      	push	{r7}
 8000292:	b085      	sub	sp, #20
 8000294:	af00      	add	r7, sp, #0
 8000296:	60f8      	str	r0, [r7, #12]
 8000298:	60b9      	str	r1, [r7, #8]
 800029a:	607a      	str	r2, [r7, #4]
 800029c:	603b      	str	r3, [r7, #0]
	return (a+b+c+d);
 800029e:	68fa      	ldr	r2, [r7, #12]
 80002a0:	68bb      	ldr	r3, [r7, #8]
 80002a2:	441a      	add	r2, r3
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	441a      	add	r2, r3
 80002a8:	683b      	ldr	r3, [r7, #0]
 80002aa:	4413      	add	r3, r2
}
 80002ac:	4618      	mov	r0, r3
 80002ae:	3714      	adds	r7, #20
 80002b0:	46bd      	mov	sp, r7
 80002b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b6:	4770      	bx	lr

080002b8 <change_sp_to_psp>:
	__asm volatile(".equ SRAM_END, (0x20000000 + (128 * 1024))");
	__asm volatile(".equ PSP_START, (SRAM_END - 512)");
	__asm volatile(".equ PSP_END, (PSP_START - 512)");

	//Initialized PSP register with some valid STACK address or location.
	__asm volatile("LDR R0, =PSP_START");
 80002b8:	4804      	ldr	r0, [pc, #16]	; (80002cc <change_sp_to_psp+0x14>)
	__asm volatile("MSR PSP, R0");
 80002ba:	f380 8809 	msr	PSP, r0

	//Enabling PSP as Current Stack Pointer by setting(1) SPSEL bit of the CONTROL register.
	__asm volatile("MOV R0, #0x02");
 80002be:	f04f 0002 	mov.w	r0, #2
	__asm volatile("MSR CONTROL, R0");
 80002c2:	f380 8814 	msr	CONTROL, r0

	//After completing all the above instructions return to the main() function.
	__asm volatile("BX LR");
 80002c6:	4770      	bx	lr
}
 80002c8:	bf00      	nop
 80002ca:	0000      	.short	0x0000
 80002cc:	2001fe00 	.word	0x2001fe00

080002d0 <generate_exception>:

void generate_exception()
{
 80002d0:	b480      	push	{r7}
 80002d2:	af00      	add	r7, sp, #0
	__asm volatile("SVC #0x02");
 80002d4:	df02      	svc	2
}
 80002d6:	bf00      	nop
 80002d8:	46bd      	mov	sp, r7
 80002da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002de:	4770      	bx	lr

080002e0 <main>:

int main(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b082      	sub	sp, #8
 80002e4:	af00      	add	r7, sp, #0
	change_sp_to_psp();
 80002e6:	f7ff ffe7 	bl	80002b8 <change_sp_to_psp>

    int result;
    result = add_fun(1, 4, 5, 6);
 80002ea:	2306      	movs	r3, #6
 80002ec:	2205      	movs	r2, #5
 80002ee:	2104      	movs	r1, #4
 80002f0:	2001      	movs	r0, #1
 80002f2:	f7ff ffcd 	bl	8000290 <add_fun>
 80002f6:	6078      	str	r0, [r7, #4]
    printf("Result = %d\n", result);
 80002f8:	6879      	ldr	r1, [r7, #4]
 80002fa:	4803      	ldr	r0, [pc, #12]	; (8000308 <main+0x28>)
 80002fc:	f000 f910 	bl	8000520 <iprintf>

    generate_exception();
 8000300:	f7ff ffe6 	bl	80002d0 <generate_exception>

    for(;;);
 8000304:	e7fe      	b.n	8000304 <main+0x24>
 8000306:	bf00      	nop
 8000308:	080013c8 	.word	0x080013c8

0800030c <SVC_Handler>:
}

void SVC_Handler()
{
 800030c:	b580      	push	{r7, lr}
 800030e:	af00      	add	r7, sp, #0
	printf("In SVC_Handler\n");
 8000310:	4802      	ldr	r0, [pc, #8]	; (800031c <SVC_Handler+0x10>)
 8000312:	f000 f979 	bl	8000608 <puts>
}
 8000316:	bf00      	nop
 8000318:	bd80      	pop	{r7, pc}
 800031a:	bf00      	nop
 800031c:	080013d8 	.word	0x080013d8

08000320 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000320:	b580      	push	{r7, lr}
 8000322:	b086      	sub	sp, #24
 8000324:	af00      	add	r7, sp, #0
 8000326:	60f8      	str	r0, [r7, #12]
 8000328:	60b9      	str	r1, [r7, #8]
 800032a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032c:	2300      	movs	r3, #0
 800032e:	617b      	str	r3, [r7, #20]
 8000330:	e00a      	b.n	8000348 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000332:	f3af 8000 	nop.w
 8000336:	4601      	mov	r1, r0
 8000338:	68bb      	ldr	r3, [r7, #8]
 800033a:	1c5a      	adds	r2, r3, #1
 800033c:	60ba      	str	r2, [r7, #8]
 800033e:	b2ca      	uxtb	r2, r1
 8000340:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000342:	697b      	ldr	r3, [r7, #20]
 8000344:	3301      	adds	r3, #1
 8000346:	617b      	str	r3, [r7, #20]
 8000348:	697a      	ldr	r2, [r7, #20]
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	429a      	cmp	r2, r3
 800034e:	dbf0      	blt.n	8000332 <_read+0x12>
	}

return len;
 8000350:	687b      	ldr	r3, [r7, #4]
}
 8000352:	4618      	mov	r0, r3
 8000354:	3718      	adds	r7, #24
 8000356:	46bd      	mov	sp, r7
 8000358:	bd80      	pop	{r7, pc}

0800035a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800035a:	b580      	push	{r7, lr}
 800035c:	b086      	sub	sp, #24
 800035e:	af00      	add	r7, sp, #0
 8000360:	60f8      	str	r0, [r7, #12]
 8000362:	60b9      	str	r1, [r7, #8]
 8000364:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000366:	2300      	movs	r3, #0
 8000368:	617b      	str	r3, [r7, #20]
 800036a:	e009      	b.n	8000380 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800036c:	68bb      	ldr	r3, [r7, #8]
 800036e:	1c5a      	adds	r2, r3, #1
 8000370:	60ba      	str	r2, [r7, #8]
 8000372:	781b      	ldrb	r3, [r3, #0]
 8000374:	4618      	mov	r0, r3
 8000376:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800037a:	697b      	ldr	r3, [r7, #20]
 800037c:	3301      	adds	r3, #1
 800037e:	617b      	str	r3, [r7, #20]
 8000380:	697a      	ldr	r2, [r7, #20]
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	429a      	cmp	r2, r3
 8000386:	dbf1      	blt.n	800036c <_write+0x12>
	}
	return len;
 8000388:	687b      	ldr	r3, [r7, #4]
}
 800038a:	4618      	mov	r0, r3
 800038c:	3718      	adds	r7, #24
 800038e:	46bd      	mov	sp, r7
 8000390:	bd80      	pop	{r7, pc}

08000392 <_close>:

int _close(int file)
{
 8000392:	b480      	push	{r7}
 8000394:	b083      	sub	sp, #12
 8000396:	af00      	add	r7, sp, #0
 8000398:	6078      	str	r0, [r7, #4]
	return -1;
 800039a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800039e:	4618      	mov	r0, r3
 80003a0:	370c      	adds	r7, #12
 80003a2:	46bd      	mov	sp, r7
 80003a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a8:	4770      	bx	lr

080003aa <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003aa:	b480      	push	{r7}
 80003ac:	b083      	sub	sp, #12
 80003ae:	af00      	add	r7, sp, #0
 80003b0:	6078      	str	r0, [r7, #4]
 80003b2:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80003b4:	683b      	ldr	r3, [r7, #0]
 80003b6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003ba:	605a      	str	r2, [r3, #4]
	return 0;
 80003bc:	2300      	movs	r3, #0
}
 80003be:	4618      	mov	r0, r3
 80003c0:	370c      	adds	r7, #12
 80003c2:	46bd      	mov	sp, r7
 80003c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c8:	4770      	bx	lr

080003ca <_isatty>:

int _isatty(int file)
{
 80003ca:	b480      	push	{r7}
 80003cc:	b083      	sub	sp, #12
 80003ce:	af00      	add	r7, sp, #0
 80003d0:	6078      	str	r0, [r7, #4]
	return 1;
 80003d2:	2301      	movs	r3, #1
}
 80003d4:	4618      	mov	r0, r3
 80003d6:	370c      	adds	r7, #12
 80003d8:	46bd      	mov	sp, r7
 80003da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003de:	4770      	bx	lr

080003e0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003e0:	b480      	push	{r7}
 80003e2:	b085      	sub	sp, #20
 80003e4:	af00      	add	r7, sp, #0
 80003e6:	60f8      	str	r0, [r7, #12]
 80003e8:	60b9      	str	r1, [r7, #8]
 80003ea:	607a      	str	r2, [r7, #4]
	return 0;
 80003ec:	2300      	movs	r3, #0
}
 80003ee:	4618      	mov	r0, r3
 80003f0:	3714      	adds	r7, #20
 80003f2:	46bd      	mov	sp, r7
 80003f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003f8:	4770      	bx	lr
	...

080003fc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003fc:	b580      	push	{r7, lr}
 80003fe:	b086      	sub	sp, #24
 8000400:	af00      	add	r7, sp, #0
 8000402:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000404:	4a14      	ldr	r2, [pc, #80]	; (8000458 <_sbrk+0x5c>)
 8000406:	4b15      	ldr	r3, [pc, #84]	; (800045c <_sbrk+0x60>)
 8000408:	1ad3      	subs	r3, r2, r3
 800040a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800040c:	697b      	ldr	r3, [r7, #20]
 800040e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000410:	4b13      	ldr	r3, [pc, #76]	; (8000460 <_sbrk+0x64>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	2b00      	cmp	r3, #0
 8000416:	d102      	bne.n	800041e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000418:	4b11      	ldr	r3, [pc, #68]	; (8000460 <_sbrk+0x64>)
 800041a:	4a12      	ldr	r2, [pc, #72]	; (8000464 <_sbrk+0x68>)
 800041c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800041e:	4b10      	ldr	r3, [pc, #64]	; (8000460 <_sbrk+0x64>)
 8000420:	681a      	ldr	r2, [r3, #0]
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4413      	add	r3, r2
 8000426:	693a      	ldr	r2, [r7, #16]
 8000428:	429a      	cmp	r2, r3
 800042a:	d207      	bcs.n	800043c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800042c:	f000 f846 	bl	80004bc <__errno>
 8000430:	4602      	mov	r2, r0
 8000432:	230c      	movs	r3, #12
 8000434:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8000436:	f04f 33ff 	mov.w	r3, #4294967295
 800043a:	e009      	b.n	8000450 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800043c:	4b08      	ldr	r3, [pc, #32]	; (8000460 <_sbrk+0x64>)
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000442:	4b07      	ldr	r3, [pc, #28]	; (8000460 <_sbrk+0x64>)
 8000444:	681a      	ldr	r2, [r3, #0]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4413      	add	r3, r2
 800044a:	4a05      	ldr	r2, [pc, #20]	; (8000460 <_sbrk+0x64>)
 800044c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800044e:	68fb      	ldr	r3, [r7, #12]
}
 8000450:	4618      	mov	r0, r3
 8000452:	3718      	adds	r7, #24
 8000454:	46bd      	mov	sp, r7
 8000456:	bd80      	pop	{r7, pc}
 8000458:	20020000 	.word	0x20020000
 800045c:	00000400 	.word	0x00000400
 8000460:	20000080 	.word	0x20000080
 8000464:	20000090 	.word	0x20000090

08000468 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000468:	480d      	ldr	r0, [pc, #52]	; (80004a0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800046a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800046c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000470:	480c      	ldr	r0, [pc, #48]	; (80004a4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000472:	490d      	ldr	r1, [pc, #52]	; (80004a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000474:	4a0d      	ldr	r2, [pc, #52]	; (80004ac <LoopForever+0xe>)
  movs r3, #0
 8000476:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000478:	e002      	b.n	8000480 <LoopCopyDataInit>

0800047a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800047a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800047c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800047e:	3304      	adds	r3, #4

08000480 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000480:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000482:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000484:	d3f9      	bcc.n	800047a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000486:	4a0a      	ldr	r2, [pc, #40]	; (80004b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000488:	4c0a      	ldr	r4, [pc, #40]	; (80004b4 <LoopForever+0x16>)
  movs r3, #0
 800048a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800048c:	e001      	b.n	8000492 <LoopFillZerobss>

0800048e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800048e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000490:	3204      	adds	r2, #4

08000492 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000492:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000494:	d3fb      	bcc.n	800048e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000496:	f000 f817 	bl	80004c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800049a:	f7ff ff21 	bl	80002e0 <main>

0800049e <LoopForever>:

LoopForever:
    b LoopForever
 800049e:	e7fe      	b.n	800049e <LoopForever>
  ldr   r0, =_estack
 80004a0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004a8:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004ac:	08001488 	.word	0x08001488
  ldr r2, =_sbss
 80004b0:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004b4:	20000090 	.word	0x20000090

080004b8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004b8:	e7fe      	b.n	80004b8 <ADC_IRQHandler>
	...

080004bc <__errno>:
 80004bc:	4b01      	ldr	r3, [pc, #4]	; (80004c4 <__errno+0x8>)
 80004be:	6818      	ldr	r0, [r3, #0]
 80004c0:	4770      	bx	lr
 80004c2:	bf00      	nop
 80004c4:	20000000 	.word	0x20000000

080004c8 <__libc_init_array>:
 80004c8:	b570      	push	{r4, r5, r6, lr}
 80004ca:	4e0d      	ldr	r6, [pc, #52]	; (8000500 <__libc_init_array+0x38>)
 80004cc:	4c0d      	ldr	r4, [pc, #52]	; (8000504 <__libc_init_array+0x3c>)
 80004ce:	1ba4      	subs	r4, r4, r6
 80004d0:	10a4      	asrs	r4, r4, #2
 80004d2:	2500      	movs	r5, #0
 80004d4:	42a5      	cmp	r5, r4
 80004d6:	d109      	bne.n	80004ec <__libc_init_array+0x24>
 80004d8:	4e0b      	ldr	r6, [pc, #44]	; (8000508 <__libc_init_array+0x40>)
 80004da:	4c0c      	ldr	r4, [pc, #48]	; (800050c <__libc_init_array+0x44>)
 80004dc:	f000 ff68 	bl	80013b0 <_init>
 80004e0:	1ba4      	subs	r4, r4, r6
 80004e2:	10a4      	asrs	r4, r4, #2
 80004e4:	2500      	movs	r5, #0
 80004e6:	42a5      	cmp	r5, r4
 80004e8:	d105      	bne.n	80004f6 <__libc_init_array+0x2e>
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004f0:	4798      	blx	r3
 80004f2:	3501      	adds	r5, #1
 80004f4:	e7ee      	b.n	80004d4 <__libc_init_array+0xc>
 80004f6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004fa:	4798      	blx	r3
 80004fc:	3501      	adds	r5, #1
 80004fe:	e7f2      	b.n	80004e6 <__libc_init_array+0x1e>
 8000500:	08001480 	.word	0x08001480
 8000504:	08001480 	.word	0x08001480
 8000508:	08001480 	.word	0x08001480
 800050c:	08001484 	.word	0x08001484

08000510 <memset>:
 8000510:	4402      	add	r2, r0
 8000512:	4603      	mov	r3, r0
 8000514:	4293      	cmp	r3, r2
 8000516:	d100      	bne.n	800051a <memset+0xa>
 8000518:	4770      	bx	lr
 800051a:	f803 1b01 	strb.w	r1, [r3], #1
 800051e:	e7f9      	b.n	8000514 <memset+0x4>

08000520 <iprintf>:
 8000520:	b40f      	push	{r0, r1, r2, r3}
 8000522:	4b0a      	ldr	r3, [pc, #40]	; (800054c <iprintf+0x2c>)
 8000524:	b513      	push	{r0, r1, r4, lr}
 8000526:	681c      	ldr	r4, [r3, #0]
 8000528:	b124      	cbz	r4, 8000534 <iprintf+0x14>
 800052a:	69a3      	ldr	r3, [r4, #24]
 800052c:	b913      	cbnz	r3, 8000534 <iprintf+0x14>
 800052e:	4620      	mov	r0, r4
 8000530:	f000 fa22 	bl	8000978 <__sinit>
 8000534:	ab05      	add	r3, sp, #20
 8000536:	9a04      	ldr	r2, [sp, #16]
 8000538:	68a1      	ldr	r1, [r4, #8]
 800053a:	9301      	str	r3, [sp, #4]
 800053c:	4620      	mov	r0, r4
 800053e:	f000 fbdb 	bl	8000cf8 <_vfiprintf_r>
 8000542:	b002      	add	sp, #8
 8000544:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000548:	b004      	add	sp, #16
 800054a:	4770      	bx	lr
 800054c:	20000000 	.word	0x20000000

08000550 <_puts_r>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	460e      	mov	r6, r1
 8000554:	4605      	mov	r5, r0
 8000556:	b118      	cbz	r0, 8000560 <_puts_r+0x10>
 8000558:	6983      	ldr	r3, [r0, #24]
 800055a:	b90b      	cbnz	r3, 8000560 <_puts_r+0x10>
 800055c:	f000 fa0c 	bl	8000978 <__sinit>
 8000560:	69ab      	ldr	r3, [r5, #24]
 8000562:	68ac      	ldr	r4, [r5, #8]
 8000564:	b913      	cbnz	r3, 800056c <_puts_r+0x1c>
 8000566:	4628      	mov	r0, r5
 8000568:	f000 fa06 	bl	8000978 <__sinit>
 800056c:	4b23      	ldr	r3, [pc, #140]	; (80005fc <_puts_r+0xac>)
 800056e:	429c      	cmp	r4, r3
 8000570:	d117      	bne.n	80005a2 <_puts_r+0x52>
 8000572:	686c      	ldr	r4, [r5, #4]
 8000574:	89a3      	ldrh	r3, [r4, #12]
 8000576:	071b      	lsls	r3, r3, #28
 8000578:	d51d      	bpl.n	80005b6 <_puts_r+0x66>
 800057a:	6923      	ldr	r3, [r4, #16]
 800057c:	b1db      	cbz	r3, 80005b6 <_puts_r+0x66>
 800057e:	3e01      	subs	r6, #1
 8000580:	68a3      	ldr	r3, [r4, #8]
 8000582:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000586:	3b01      	subs	r3, #1
 8000588:	60a3      	str	r3, [r4, #8]
 800058a:	b9e9      	cbnz	r1, 80005c8 <_puts_r+0x78>
 800058c:	2b00      	cmp	r3, #0
 800058e:	da2e      	bge.n	80005ee <_puts_r+0x9e>
 8000590:	4622      	mov	r2, r4
 8000592:	210a      	movs	r1, #10
 8000594:	4628      	mov	r0, r5
 8000596:	f000 f83f 	bl	8000618 <__swbuf_r>
 800059a:	3001      	adds	r0, #1
 800059c:	d011      	beq.n	80005c2 <_puts_r+0x72>
 800059e:	200a      	movs	r0, #10
 80005a0:	e011      	b.n	80005c6 <_puts_r+0x76>
 80005a2:	4b17      	ldr	r3, [pc, #92]	; (8000600 <_puts_r+0xb0>)
 80005a4:	429c      	cmp	r4, r3
 80005a6:	d101      	bne.n	80005ac <_puts_r+0x5c>
 80005a8:	68ac      	ldr	r4, [r5, #8]
 80005aa:	e7e3      	b.n	8000574 <_puts_r+0x24>
 80005ac:	4b15      	ldr	r3, [pc, #84]	; (8000604 <_puts_r+0xb4>)
 80005ae:	429c      	cmp	r4, r3
 80005b0:	bf08      	it	eq
 80005b2:	68ec      	ldreq	r4, [r5, #12]
 80005b4:	e7de      	b.n	8000574 <_puts_r+0x24>
 80005b6:	4621      	mov	r1, r4
 80005b8:	4628      	mov	r0, r5
 80005ba:	f000 f87f 	bl	80006bc <__swsetup_r>
 80005be:	2800      	cmp	r0, #0
 80005c0:	d0dd      	beq.n	800057e <_puts_r+0x2e>
 80005c2:	f04f 30ff 	mov.w	r0, #4294967295
 80005c6:	bd70      	pop	{r4, r5, r6, pc}
 80005c8:	2b00      	cmp	r3, #0
 80005ca:	da04      	bge.n	80005d6 <_puts_r+0x86>
 80005cc:	69a2      	ldr	r2, [r4, #24]
 80005ce:	429a      	cmp	r2, r3
 80005d0:	dc06      	bgt.n	80005e0 <_puts_r+0x90>
 80005d2:	290a      	cmp	r1, #10
 80005d4:	d004      	beq.n	80005e0 <_puts_r+0x90>
 80005d6:	6823      	ldr	r3, [r4, #0]
 80005d8:	1c5a      	adds	r2, r3, #1
 80005da:	6022      	str	r2, [r4, #0]
 80005dc:	7019      	strb	r1, [r3, #0]
 80005de:	e7cf      	b.n	8000580 <_puts_r+0x30>
 80005e0:	4622      	mov	r2, r4
 80005e2:	4628      	mov	r0, r5
 80005e4:	f000 f818 	bl	8000618 <__swbuf_r>
 80005e8:	3001      	adds	r0, #1
 80005ea:	d1c9      	bne.n	8000580 <_puts_r+0x30>
 80005ec:	e7e9      	b.n	80005c2 <_puts_r+0x72>
 80005ee:	6823      	ldr	r3, [r4, #0]
 80005f0:	200a      	movs	r0, #10
 80005f2:	1c5a      	adds	r2, r3, #1
 80005f4:	6022      	str	r2, [r4, #0]
 80005f6:	7018      	strb	r0, [r3, #0]
 80005f8:	e7e5      	b.n	80005c6 <_puts_r+0x76>
 80005fa:	bf00      	nop
 80005fc:	0800140c 	.word	0x0800140c
 8000600:	0800142c 	.word	0x0800142c
 8000604:	080013ec 	.word	0x080013ec

08000608 <puts>:
 8000608:	4b02      	ldr	r3, [pc, #8]	; (8000614 <puts+0xc>)
 800060a:	4601      	mov	r1, r0
 800060c:	6818      	ldr	r0, [r3, #0]
 800060e:	f7ff bf9f 	b.w	8000550 <_puts_r>
 8000612:	bf00      	nop
 8000614:	20000000 	.word	0x20000000

08000618 <__swbuf_r>:
 8000618:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800061a:	460e      	mov	r6, r1
 800061c:	4614      	mov	r4, r2
 800061e:	4605      	mov	r5, r0
 8000620:	b118      	cbz	r0, 800062a <__swbuf_r+0x12>
 8000622:	6983      	ldr	r3, [r0, #24]
 8000624:	b90b      	cbnz	r3, 800062a <__swbuf_r+0x12>
 8000626:	f000 f9a7 	bl	8000978 <__sinit>
 800062a:	4b21      	ldr	r3, [pc, #132]	; (80006b0 <__swbuf_r+0x98>)
 800062c:	429c      	cmp	r4, r3
 800062e:	d12a      	bne.n	8000686 <__swbuf_r+0x6e>
 8000630:	686c      	ldr	r4, [r5, #4]
 8000632:	69a3      	ldr	r3, [r4, #24]
 8000634:	60a3      	str	r3, [r4, #8]
 8000636:	89a3      	ldrh	r3, [r4, #12]
 8000638:	071a      	lsls	r2, r3, #28
 800063a:	d52e      	bpl.n	800069a <__swbuf_r+0x82>
 800063c:	6923      	ldr	r3, [r4, #16]
 800063e:	b363      	cbz	r3, 800069a <__swbuf_r+0x82>
 8000640:	6923      	ldr	r3, [r4, #16]
 8000642:	6820      	ldr	r0, [r4, #0]
 8000644:	1ac0      	subs	r0, r0, r3
 8000646:	6963      	ldr	r3, [r4, #20]
 8000648:	b2f6      	uxtb	r6, r6
 800064a:	4283      	cmp	r3, r0
 800064c:	4637      	mov	r7, r6
 800064e:	dc04      	bgt.n	800065a <__swbuf_r+0x42>
 8000650:	4621      	mov	r1, r4
 8000652:	4628      	mov	r0, r5
 8000654:	f000 f926 	bl	80008a4 <_fflush_r>
 8000658:	bb28      	cbnz	r0, 80006a6 <__swbuf_r+0x8e>
 800065a:	68a3      	ldr	r3, [r4, #8]
 800065c:	3b01      	subs	r3, #1
 800065e:	60a3      	str	r3, [r4, #8]
 8000660:	6823      	ldr	r3, [r4, #0]
 8000662:	1c5a      	adds	r2, r3, #1
 8000664:	6022      	str	r2, [r4, #0]
 8000666:	701e      	strb	r6, [r3, #0]
 8000668:	6963      	ldr	r3, [r4, #20]
 800066a:	3001      	adds	r0, #1
 800066c:	4283      	cmp	r3, r0
 800066e:	d004      	beq.n	800067a <__swbuf_r+0x62>
 8000670:	89a3      	ldrh	r3, [r4, #12]
 8000672:	07db      	lsls	r3, r3, #31
 8000674:	d519      	bpl.n	80006aa <__swbuf_r+0x92>
 8000676:	2e0a      	cmp	r6, #10
 8000678:	d117      	bne.n	80006aa <__swbuf_r+0x92>
 800067a:	4621      	mov	r1, r4
 800067c:	4628      	mov	r0, r5
 800067e:	f000 f911 	bl	80008a4 <_fflush_r>
 8000682:	b190      	cbz	r0, 80006aa <__swbuf_r+0x92>
 8000684:	e00f      	b.n	80006a6 <__swbuf_r+0x8e>
 8000686:	4b0b      	ldr	r3, [pc, #44]	; (80006b4 <__swbuf_r+0x9c>)
 8000688:	429c      	cmp	r4, r3
 800068a:	d101      	bne.n	8000690 <__swbuf_r+0x78>
 800068c:	68ac      	ldr	r4, [r5, #8]
 800068e:	e7d0      	b.n	8000632 <__swbuf_r+0x1a>
 8000690:	4b09      	ldr	r3, [pc, #36]	; (80006b8 <__swbuf_r+0xa0>)
 8000692:	429c      	cmp	r4, r3
 8000694:	bf08      	it	eq
 8000696:	68ec      	ldreq	r4, [r5, #12]
 8000698:	e7cb      	b.n	8000632 <__swbuf_r+0x1a>
 800069a:	4621      	mov	r1, r4
 800069c:	4628      	mov	r0, r5
 800069e:	f000 f80d 	bl	80006bc <__swsetup_r>
 80006a2:	2800      	cmp	r0, #0
 80006a4:	d0cc      	beq.n	8000640 <__swbuf_r+0x28>
 80006a6:	f04f 37ff 	mov.w	r7, #4294967295
 80006aa:	4638      	mov	r0, r7
 80006ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006ae:	bf00      	nop
 80006b0:	0800140c 	.word	0x0800140c
 80006b4:	0800142c 	.word	0x0800142c
 80006b8:	080013ec 	.word	0x080013ec

080006bc <__swsetup_r>:
 80006bc:	4b32      	ldr	r3, [pc, #200]	; (8000788 <__swsetup_r+0xcc>)
 80006be:	b570      	push	{r4, r5, r6, lr}
 80006c0:	681d      	ldr	r5, [r3, #0]
 80006c2:	4606      	mov	r6, r0
 80006c4:	460c      	mov	r4, r1
 80006c6:	b125      	cbz	r5, 80006d2 <__swsetup_r+0x16>
 80006c8:	69ab      	ldr	r3, [r5, #24]
 80006ca:	b913      	cbnz	r3, 80006d2 <__swsetup_r+0x16>
 80006cc:	4628      	mov	r0, r5
 80006ce:	f000 f953 	bl	8000978 <__sinit>
 80006d2:	4b2e      	ldr	r3, [pc, #184]	; (800078c <__swsetup_r+0xd0>)
 80006d4:	429c      	cmp	r4, r3
 80006d6:	d10f      	bne.n	80006f8 <__swsetup_r+0x3c>
 80006d8:	686c      	ldr	r4, [r5, #4]
 80006da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006de:	b29a      	uxth	r2, r3
 80006e0:	0715      	lsls	r5, r2, #28
 80006e2:	d42c      	bmi.n	800073e <__swsetup_r+0x82>
 80006e4:	06d0      	lsls	r0, r2, #27
 80006e6:	d411      	bmi.n	800070c <__swsetup_r+0x50>
 80006e8:	2209      	movs	r2, #9
 80006ea:	6032      	str	r2, [r6, #0]
 80006ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80006f0:	81a3      	strh	r3, [r4, #12]
 80006f2:	f04f 30ff 	mov.w	r0, #4294967295
 80006f6:	e03e      	b.n	8000776 <__swsetup_r+0xba>
 80006f8:	4b25      	ldr	r3, [pc, #148]	; (8000790 <__swsetup_r+0xd4>)
 80006fa:	429c      	cmp	r4, r3
 80006fc:	d101      	bne.n	8000702 <__swsetup_r+0x46>
 80006fe:	68ac      	ldr	r4, [r5, #8]
 8000700:	e7eb      	b.n	80006da <__swsetup_r+0x1e>
 8000702:	4b24      	ldr	r3, [pc, #144]	; (8000794 <__swsetup_r+0xd8>)
 8000704:	429c      	cmp	r4, r3
 8000706:	bf08      	it	eq
 8000708:	68ec      	ldreq	r4, [r5, #12]
 800070a:	e7e6      	b.n	80006da <__swsetup_r+0x1e>
 800070c:	0751      	lsls	r1, r2, #29
 800070e:	d512      	bpl.n	8000736 <__swsetup_r+0x7a>
 8000710:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000712:	b141      	cbz	r1, 8000726 <__swsetup_r+0x6a>
 8000714:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000718:	4299      	cmp	r1, r3
 800071a:	d002      	beq.n	8000722 <__swsetup_r+0x66>
 800071c:	4630      	mov	r0, r6
 800071e:	f000 fa19 	bl	8000b54 <_free_r>
 8000722:	2300      	movs	r3, #0
 8000724:	6363      	str	r3, [r4, #52]	; 0x34
 8000726:	89a3      	ldrh	r3, [r4, #12]
 8000728:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800072c:	81a3      	strh	r3, [r4, #12]
 800072e:	2300      	movs	r3, #0
 8000730:	6063      	str	r3, [r4, #4]
 8000732:	6923      	ldr	r3, [r4, #16]
 8000734:	6023      	str	r3, [r4, #0]
 8000736:	89a3      	ldrh	r3, [r4, #12]
 8000738:	f043 0308 	orr.w	r3, r3, #8
 800073c:	81a3      	strh	r3, [r4, #12]
 800073e:	6923      	ldr	r3, [r4, #16]
 8000740:	b94b      	cbnz	r3, 8000756 <__swsetup_r+0x9a>
 8000742:	89a3      	ldrh	r3, [r4, #12]
 8000744:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000748:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800074c:	d003      	beq.n	8000756 <__swsetup_r+0x9a>
 800074e:	4621      	mov	r1, r4
 8000750:	4630      	mov	r0, r6
 8000752:	f000 f9bf 	bl	8000ad4 <__smakebuf_r>
 8000756:	89a2      	ldrh	r2, [r4, #12]
 8000758:	f012 0301 	ands.w	r3, r2, #1
 800075c:	d00c      	beq.n	8000778 <__swsetup_r+0xbc>
 800075e:	2300      	movs	r3, #0
 8000760:	60a3      	str	r3, [r4, #8]
 8000762:	6963      	ldr	r3, [r4, #20]
 8000764:	425b      	negs	r3, r3
 8000766:	61a3      	str	r3, [r4, #24]
 8000768:	6923      	ldr	r3, [r4, #16]
 800076a:	b953      	cbnz	r3, 8000782 <__swsetup_r+0xc6>
 800076c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000770:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000774:	d1ba      	bne.n	80006ec <__swsetup_r+0x30>
 8000776:	bd70      	pop	{r4, r5, r6, pc}
 8000778:	0792      	lsls	r2, r2, #30
 800077a:	bf58      	it	pl
 800077c:	6963      	ldrpl	r3, [r4, #20]
 800077e:	60a3      	str	r3, [r4, #8]
 8000780:	e7f2      	b.n	8000768 <__swsetup_r+0xac>
 8000782:	2000      	movs	r0, #0
 8000784:	e7f7      	b.n	8000776 <__swsetup_r+0xba>
 8000786:	bf00      	nop
 8000788:	20000000 	.word	0x20000000
 800078c:	0800140c 	.word	0x0800140c
 8000790:	0800142c 	.word	0x0800142c
 8000794:	080013ec 	.word	0x080013ec

08000798 <__sflush_r>:
 8000798:	898a      	ldrh	r2, [r1, #12]
 800079a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800079e:	4605      	mov	r5, r0
 80007a0:	0710      	lsls	r0, r2, #28
 80007a2:	460c      	mov	r4, r1
 80007a4:	d458      	bmi.n	8000858 <__sflush_r+0xc0>
 80007a6:	684b      	ldr	r3, [r1, #4]
 80007a8:	2b00      	cmp	r3, #0
 80007aa:	dc05      	bgt.n	80007b8 <__sflush_r+0x20>
 80007ac:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80007ae:	2b00      	cmp	r3, #0
 80007b0:	dc02      	bgt.n	80007b8 <__sflush_r+0x20>
 80007b2:	2000      	movs	r0, #0
 80007b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007b8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007ba:	2e00      	cmp	r6, #0
 80007bc:	d0f9      	beq.n	80007b2 <__sflush_r+0x1a>
 80007be:	2300      	movs	r3, #0
 80007c0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80007c4:	682f      	ldr	r7, [r5, #0]
 80007c6:	6a21      	ldr	r1, [r4, #32]
 80007c8:	602b      	str	r3, [r5, #0]
 80007ca:	d032      	beq.n	8000832 <__sflush_r+0x9a>
 80007cc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80007ce:	89a3      	ldrh	r3, [r4, #12]
 80007d0:	075a      	lsls	r2, r3, #29
 80007d2:	d505      	bpl.n	80007e0 <__sflush_r+0x48>
 80007d4:	6863      	ldr	r3, [r4, #4]
 80007d6:	1ac0      	subs	r0, r0, r3
 80007d8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007da:	b10b      	cbz	r3, 80007e0 <__sflush_r+0x48>
 80007dc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007de:	1ac0      	subs	r0, r0, r3
 80007e0:	2300      	movs	r3, #0
 80007e2:	4602      	mov	r2, r0
 80007e4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007e6:	6a21      	ldr	r1, [r4, #32]
 80007e8:	4628      	mov	r0, r5
 80007ea:	47b0      	blx	r6
 80007ec:	1c43      	adds	r3, r0, #1
 80007ee:	89a3      	ldrh	r3, [r4, #12]
 80007f0:	d106      	bne.n	8000800 <__sflush_r+0x68>
 80007f2:	6829      	ldr	r1, [r5, #0]
 80007f4:	291d      	cmp	r1, #29
 80007f6:	d848      	bhi.n	800088a <__sflush_r+0xf2>
 80007f8:	4a29      	ldr	r2, [pc, #164]	; (80008a0 <__sflush_r+0x108>)
 80007fa:	40ca      	lsrs	r2, r1
 80007fc:	07d6      	lsls	r6, r2, #31
 80007fe:	d544      	bpl.n	800088a <__sflush_r+0xf2>
 8000800:	2200      	movs	r2, #0
 8000802:	6062      	str	r2, [r4, #4]
 8000804:	04d9      	lsls	r1, r3, #19
 8000806:	6922      	ldr	r2, [r4, #16]
 8000808:	6022      	str	r2, [r4, #0]
 800080a:	d504      	bpl.n	8000816 <__sflush_r+0x7e>
 800080c:	1c42      	adds	r2, r0, #1
 800080e:	d101      	bne.n	8000814 <__sflush_r+0x7c>
 8000810:	682b      	ldr	r3, [r5, #0]
 8000812:	b903      	cbnz	r3, 8000816 <__sflush_r+0x7e>
 8000814:	6560      	str	r0, [r4, #84]	; 0x54
 8000816:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000818:	602f      	str	r7, [r5, #0]
 800081a:	2900      	cmp	r1, #0
 800081c:	d0c9      	beq.n	80007b2 <__sflush_r+0x1a>
 800081e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000822:	4299      	cmp	r1, r3
 8000824:	d002      	beq.n	800082c <__sflush_r+0x94>
 8000826:	4628      	mov	r0, r5
 8000828:	f000 f994 	bl	8000b54 <_free_r>
 800082c:	2000      	movs	r0, #0
 800082e:	6360      	str	r0, [r4, #52]	; 0x34
 8000830:	e7c0      	b.n	80007b4 <__sflush_r+0x1c>
 8000832:	2301      	movs	r3, #1
 8000834:	4628      	mov	r0, r5
 8000836:	47b0      	blx	r6
 8000838:	1c41      	adds	r1, r0, #1
 800083a:	d1c8      	bne.n	80007ce <__sflush_r+0x36>
 800083c:	682b      	ldr	r3, [r5, #0]
 800083e:	2b00      	cmp	r3, #0
 8000840:	d0c5      	beq.n	80007ce <__sflush_r+0x36>
 8000842:	2b1d      	cmp	r3, #29
 8000844:	d001      	beq.n	800084a <__sflush_r+0xb2>
 8000846:	2b16      	cmp	r3, #22
 8000848:	d101      	bne.n	800084e <__sflush_r+0xb6>
 800084a:	602f      	str	r7, [r5, #0]
 800084c:	e7b1      	b.n	80007b2 <__sflush_r+0x1a>
 800084e:	89a3      	ldrh	r3, [r4, #12]
 8000850:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000854:	81a3      	strh	r3, [r4, #12]
 8000856:	e7ad      	b.n	80007b4 <__sflush_r+0x1c>
 8000858:	690f      	ldr	r7, [r1, #16]
 800085a:	2f00      	cmp	r7, #0
 800085c:	d0a9      	beq.n	80007b2 <__sflush_r+0x1a>
 800085e:	0793      	lsls	r3, r2, #30
 8000860:	680e      	ldr	r6, [r1, #0]
 8000862:	bf08      	it	eq
 8000864:	694b      	ldreq	r3, [r1, #20]
 8000866:	600f      	str	r7, [r1, #0]
 8000868:	bf18      	it	ne
 800086a:	2300      	movne	r3, #0
 800086c:	eba6 0807 	sub.w	r8, r6, r7
 8000870:	608b      	str	r3, [r1, #8]
 8000872:	f1b8 0f00 	cmp.w	r8, #0
 8000876:	dd9c      	ble.n	80007b2 <__sflush_r+0x1a>
 8000878:	4643      	mov	r3, r8
 800087a:	463a      	mov	r2, r7
 800087c:	6a21      	ldr	r1, [r4, #32]
 800087e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000880:	4628      	mov	r0, r5
 8000882:	47b0      	blx	r6
 8000884:	2800      	cmp	r0, #0
 8000886:	dc06      	bgt.n	8000896 <__sflush_r+0xfe>
 8000888:	89a3      	ldrh	r3, [r4, #12]
 800088a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800088e:	81a3      	strh	r3, [r4, #12]
 8000890:	f04f 30ff 	mov.w	r0, #4294967295
 8000894:	e78e      	b.n	80007b4 <__sflush_r+0x1c>
 8000896:	4407      	add	r7, r0
 8000898:	eba8 0800 	sub.w	r8, r8, r0
 800089c:	e7e9      	b.n	8000872 <__sflush_r+0xda>
 800089e:	bf00      	nop
 80008a0:	20400001 	.word	0x20400001

080008a4 <_fflush_r>:
 80008a4:	b538      	push	{r3, r4, r5, lr}
 80008a6:	690b      	ldr	r3, [r1, #16]
 80008a8:	4605      	mov	r5, r0
 80008aa:	460c      	mov	r4, r1
 80008ac:	b1db      	cbz	r3, 80008e6 <_fflush_r+0x42>
 80008ae:	b118      	cbz	r0, 80008b8 <_fflush_r+0x14>
 80008b0:	6983      	ldr	r3, [r0, #24]
 80008b2:	b90b      	cbnz	r3, 80008b8 <_fflush_r+0x14>
 80008b4:	f000 f860 	bl	8000978 <__sinit>
 80008b8:	4b0c      	ldr	r3, [pc, #48]	; (80008ec <_fflush_r+0x48>)
 80008ba:	429c      	cmp	r4, r3
 80008bc:	d109      	bne.n	80008d2 <_fflush_r+0x2e>
 80008be:	686c      	ldr	r4, [r5, #4]
 80008c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008c4:	b17b      	cbz	r3, 80008e6 <_fflush_r+0x42>
 80008c6:	4621      	mov	r1, r4
 80008c8:	4628      	mov	r0, r5
 80008ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80008ce:	f7ff bf63 	b.w	8000798 <__sflush_r>
 80008d2:	4b07      	ldr	r3, [pc, #28]	; (80008f0 <_fflush_r+0x4c>)
 80008d4:	429c      	cmp	r4, r3
 80008d6:	d101      	bne.n	80008dc <_fflush_r+0x38>
 80008d8:	68ac      	ldr	r4, [r5, #8]
 80008da:	e7f1      	b.n	80008c0 <_fflush_r+0x1c>
 80008dc:	4b05      	ldr	r3, [pc, #20]	; (80008f4 <_fflush_r+0x50>)
 80008de:	429c      	cmp	r4, r3
 80008e0:	bf08      	it	eq
 80008e2:	68ec      	ldreq	r4, [r5, #12]
 80008e4:	e7ec      	b.n	80008c0 <_fflush_r+0x1c>
 80008e6:	2000      	movs	r0, #0
 80008e8:	bd38      	pop	{r3, r4, r5, pc}
 80008ea:	bf00      	nop
 80008ec:	0800140c 	.word	0x0800140c
 80008f0:	0800142c 	.word	0x0800142c
 80008f4:	080013ec 	.word	0x080013ec

080008f8 <std>:
 80008f8:	2300      	movs	r3, #0
 80008fa:	b510      	push	{r4, lr}
 80008fc:	4604      	mov	r4, r0
 80008fe:	e9c0 3300 	strd	r3, r3, [r0]
 8000902:	6083      	str	r3, [r0, #8]
 8000904:	8181      	strh	r1, [r0, #12]
 8000906:	6643      	str	r3, [r0, #100]	; 0x64
 8000908:	81c2      	strh	r2, [r0, #14]
 800090a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800090e:	6183      	str	r3, [r0, #24]
 8000910:	4619      	mov	r1, r3
 8000912:	2208      	movs	r2, #8
 8000914:	305c      	adds	r0, #92	; 0x5c
 8000916:	f7ff fdfb 	bl	8000510 <memset>
 800091a:	4b05      	ldr	r3, [pc, #20]	; (8000930 <std+0x38>)
 800091c:	6263      	str	r3, [r4, #36]	; 0x24
 800091e:	4b05      	ldr	r3, [pc, #20]	; (8000934 <std+0x3c>)
 8000920:	62a3      	str	r3, [r4, #40]	; 0x28
 8000922:	4b05      	ldr	r3, [pc, #20]	; (8000938 <std+0x40>)
 8000924:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000926:	4b05      	ldr	r3, [pc, #20]	; (800093c <std+0x44>)
 8000928:	6224      	str	r4, [r4, #32]
 800092a:	6323      	str	r3, [r4, #48]	; 0x30
 800092c:	bd10      	pop	{r4, pc}
 800092e:	bf00      	nop
 8000930:	08001255 	.word	0x08001255
 8000934:	08001277 	.word	0x08001277
 8000938:	080012af 	.word	0x080012af
 800093c:	080012d3 	.word	0x080012d3

08000940 <_cleanup_r>:
 8000940:	4901      	ldr	r1, [pc, #4]	; (8000948 <_cleanup_r+0x8>)
 8000942:	f000 b885 	b.w	8000a50 <_fwalk_reent>
 8000946:	bf00      	nop
 8000948:	080008a5 	.word	0x080008a5

0800094c <__sfmoreglue>:
 800094c:	b570      	push	{r4, r5, r6, lr}
 800094e:	1e4a      	subs	r2, r1, #1
 8000950:	2568      	movs	r5, #104	; 0x68
 8000952:	4355      	muls	r5, r2
 8000954:	460e      	mov	r6, r1
 8000956:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800095a:	f000 f949 	bl	8000bf0 <_malloc_r>
 800095e:	4604      	mov	r4, r0
 8000960:	b140      	cbz	r0, 8000974 <__sfmoreglue+0x28>
 8000962:	2100      	movs	r1, #0
 8000964:	e9c0 1600 	strd	r1, r6, [r0]
 8000968:	300c      	adds	r0, #12
 800096a:	60a0      	str	r0, [r4, #8]
 800096c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000970:	f7ff fdce 	bl	8000510 <memset>
 8000974:	4620      	mov	r0, r4
 8000976:	bd70      	pop	{r4, r5, r6, pc}

08000978 <__sinit>:
 8000978:	6983      	ldr	r3, [r0, #24]
 800097a:	b510      	push	{r4, lr}
 800097c:	4604      	mov	r4, r0
 800097e:	bb33      	cbnz	r3, 80009ce <__sinit+0x56>
 8000980:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000984:	6503      	str	r3, [r0, #80]	; 0x50
 8000986:	4b12      	ldr	r3, [pc, #72]	; (80009d0 <__sinit+0x58>)
 8000988:	4a12      	ldr	r2, [pc, #72]	; (80009d4 <__sinit+0x5c>)
 800098a:	681b      	ldr	r3, [r3, #0]
 800098c:	6282      	str	r2, [r0, #40]	; 0x28
 800098e:	4298      	cmp	r0, r3
 8000990:	bf04      	itt	eq
 8000992:	2301      	moveq	r3, #1
 8000994:	6183      	streq	r3, [r0, #24]
 8000996:	f000 f81f 	bl	80009d8 <__sfp>
 800099a:	6060      	str	r0, [r4, #4]
 800099c:	4620      	mov	r0, r4
 800099e:	f000 f81b 	bl	80009d8 <__sfp>
 80009a2:	60a0      	str	r0, [r4, #8]
 80009a4:	4620      	mov	r0, r4
 80009a6:	f000 f817 	bl	80009d8 <__sfp>
 80009aa:	2200      	movs	r2, #0
 80009ac:	60e0      	str	r0, [r4, #12]
 80009ae:	2104      	movs	r1, #4
 80009b0:	6860      	ldr	r0, [r4, #4]
 80009b2:	f7ff ffa1 	bl	80008f8 <std>
 80009b6:	2201      	movs	r2, #1
 80009b8:	2109      	movs	r1, #9
 80009ba:	68a0      	ldr	r0, [r4, #8]
 80009bc:	f7ff ff9c 	bl	80008f8 <std>
 80009c0:	2202      	movs	r2, #2
 80009c2:	2112      	movs	r1, #18
 80009c4:	68e0      	ldr	r0, [r4, #12]
 80009c6:	f7ff ff97 	bl	80008f8 <std>
 80009ca:	2301      	movs	r3, #1
 80009cc:	61a3      	str	r3, [r4, #24]
 80009ce:	bd10      	pop	{r4, pc}
 80009d0:	080013e8 	.word	0x080013e8
 80009d4:	08000941 	.word	0x08000941

080009d8 <__sfp>:
 80009d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009da:	4b1b      	ldr	r3, [pc, #108]	; (8000a48 <__sfp+0x70>)
 80009dc:	681e      	ldr	r6, [r3, #0]
 80009de:	69b3      	ldr	r3, [r6, #24]
 80009e0:	4607      	mov	r7, r0
 80009e2:	b913      	cbnz	r3, 80009ea <__sfp+0x12>
 80009e4:	4630      	mov	r0, r6
 80009e6:	f7ff ffc7 	bl	8000978 <__sinit>
 80009ea:	3648      	adds	r6, #72	; 0x48
 80009ec:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80009f0:	3b01      	subs	r3, #1
 80009f2:	d503      	bpl.n	80009fc <__sfp+0x24>
 80009f4:	6833      	ldr	r3, [r6, #0]
 80009f6:	b133      	cbz	r3, 8000a06 <__sfp+0x2e>
 80009f8:	6836      	ldr	r6, [r6, #0]
 80009fa:	e7f7      	b.n	80009ec <__sfp+0x14>
 80009fc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a00:	b16d      	cbz	r5, 8000a1e <__sfp+0x46>
 8000a02:	3468      	adds	r4, #104	; 0x68
 8000a04:	e7f4      	b.n	80009f0 <__sfp+0x18>
 8000a06:	2104      	movs	r1, #4
 8000a08:	4638      	mov	r0, r7
 8000a0a:	f7ff ff9f 	bl	800094c <__sfmoreglue>
 8000a0e:	6030      	str	r0, [r6, #0]
 8000a10:	2800      	cmp	r0, #0
 8000a12:	d1f1      	bne.n	80009f8 <__sfp+0x20>
 8000a14:	230c      	movs	r3, #12
 8000a16:	603b      	str	r3, [r7, #0]
 8000a18:	4604      	mov	r4, r0
 8000a1a:	4620      	mov	r0, r4
 8000a1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a1e:	4b0b      	ldr	r3, [pc, #44]	; (8000a4c <__sfp+0x74>)
 8000a20:	6665      	str	r5, [r4, #100]	; 0x64
 8000a22:	e9c4 5500 	strd	r5, r5, [r4]
 8000a26:	60a5      	str	r5, [r4, #8]
 8000a28:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000a2c:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000a30:	2208      	movs	r2, #8
 8000a32:	4629      	mov	r1, r5
 8000a34:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a38:	f7ff fd6a 	bl	8000510 <memset>
 8000a3c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a40:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a44:	e7e9      	b.n	8000a1a <__sfp+0x42>
 8000a46:	bf00      	nop
 8000a48:	080013e8 	.word	0x080013e8
 8000a4c:	ffff0001 	.word	0xffff0001

08000a50 <_fwalk_reent>:
 8000a50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a54:	4680      	mov	r8, r0
 8000a56:	4689      	mov	r9, r1
 8000a58:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a5c:	2600      	movs	r6, #0
 8000a5e:	b914      	cbnz	r4, 8000a66 <_fwalk_reent+0x16>
 8000a60:	4630      	mov	r0, r6
 8000a62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a66:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000a6a:	3f01      	subs	r7, #1
 8000a6c:	d501      	bpl.n	8000a72 <_fwalk_reent+0x22>
 8000a6e:	6824      	ldr	r4, [r4, #0]
 8000a70:	e7f5      	b.n	8000a5e <_fwalk_reent+0xe>
 8000a72:	89ab      	ldrh	r3, [r5, #12]
 8000a74:	2b01      	cmp	r3, #1
 8000a76:	d907      	bls.n	8000a88 <_fwalk_reent+0x38>
 8000a78:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a7c:	3301      	adds	r3, #1
 8000a7e:	d003      	beq.n	8000a88 <_fwalk_reent+0x38>
 8000a80:	4629      	mov	r1, r5
 8000a82:	4640      	mov	r0, r8
 8000a84:	47c8      	blx	r9
 8000a86:	4306      	orrs	r6, r0
 8000a88:	3568      	adds	r5, #104	; 0x68
 8000a8a:	e7ee      	b.n	8000a6a <_fwalk_reent+0x1a>

08000a8c <__swhatbuf_r>:
 8000a8c:	b570      	push	{r4, r5, r6, lr}
 8000a8e:	460e      	mov	r6, r1
 8000a90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a94:	2900      	cmp	r1, #0
 8000a96:	b096      	sub	sp, #88	; 0x58
 8000a98:	4614      	mov	r4, r2
 8000a9a:	461d      	mov	r5, r3
 8000a9c:	da07      	bge.n	8000aae <__swhatbuf_r+0x22>
 8000a9e:	2300      	movs	r3, #0
 8000aa0:	602b      	str	r3, [r5, #0]
 8000aa2:	89b3      	ldrh	r3, [r6, #12]
 8000aa4:	061a      	lsls	r2, r3, #24
 8000aa6:	d410      	bmi.n	8000aca <__swhatbuf_r+0x3e>
 8000aa8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000aac:	e00e      	b.n	8000acc <__swhatbuf_r+0x40>
 8000aae:	466a      	mov	r2, sp
 8000ab0:	f000 fc36 	bl	8001320 <_fstat_r>
 8000ab4:	2800      	cmp	r0, #0
 8000ab6:	dbf2      	blt.n	8000a9e <__swhatbuf_r+0x12>
 8000ab8:	9a01      	ldr	r2, [sp, #4]
 8000aba:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000abe:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000ac2:	425a      	negs	r2, r3
 8000ac4:	415a      	adcs	r2, r3
 8000ac6:	602a      	str	r2, [r5, #0]
 8000ac8:	e7ee      	b.n	8000aa8 <__swhatbuf_r+0x1c>
 8000aca:	2340      	movs	r3, #64	; 0x40
 8000acc:	2000      	movs	r0, #0
 8000ace:	6023      	str	r3, [r4, #0]
 8000ad0:	b016      	add	sp, #88	; 0x58
 8000ad2:	bd70      	pop	{r4, r5, r6, pc}

08000ad4 <__smakebuf_r>:
 8000ad4:	898b      	ldrh	r3, [r1, #12]
 8000ad6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000ad8:	079d      	lsls	r5, r3, #30
 8000ada:	4606      	mov	r6, r0
 8000adc:	460c      	mov	r4, r1
 8000ade:	d507      	bpl.n	8000af0 <__smakebuf_r+0x1c>
 8000ae0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000ae4:	6023      	str	r3, [r4, #0]
 8000ae6:	6123      	str	r3, [r4, #16]
 8000ae8:	2301      	movs	r3, #1
 8000aea:	6163      	str	r3, [r4, #20]
 8000aec:	b002      	add	sp, #8
 8000aee:	bd70      	pop	{r4, r5, r6, pc}
 8000af0:	ab01      	add	r3, sp, #4
 8000af2:	466a      	mov	r2, sp
 8000af4:	f7ff ffca 	bl	8000a8c <__swhatbuf_r>
 8000af8:	9900      	ldr	r1, [sp, #0]
 8000afa:	4605      	mov	r5, r0
 8000afc:	4630      	mov	r0, r6
 8000afe:	f000 f877 	bl	8000bf0 <_malloc_r>
 8000b02:	b948      	cbnz	r0, 8000b18 <__smakebuf_r+0x44>
 8000b04:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b08:	059a      	lsls	r2, r3, #22
 8000b0a:	d4ef      	bmi.n	8000aec <__smakebuf_r+0x18>
 8000b0c:	f023 0303 	bic.w	r3, r3, #3
 8000b10:	f043 0302 	orr.w	r3, r3, #2
 8000b14:	81a3      	strh	r3, [r4, #12]
 8000b16:	e7e3      	b.n	8000ae0 <__smakebuf_r+0xc>
 8000b18:	4b0d      	ldr	r3, [pc, #52]	; (8000b50 <__smakebuf_r+0x7c>)
 8000b1a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b1c:	89a3      	ldrh	r3, [r4, #12]
 8000b1e:	6020      	str	r0, [r4, #0]
 8000b20:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b24:	81a3      	strh	r3, [r4, #12]
 8000b26:	9b00      	ldr	r3, [sp, #0]
 8000b28:	6163      	str	r3, [r4, #20]
 8000b2a:	9b01      	ldr	r3, [sp, #4]
 8000b2c:	6120      	str	r0, [r4, #16]
 8000b2e:	b15b      	cbz	r3, 8000b48 <__smakebuf_r+0x74>
 8000b30:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b34:	4630      	mov	r0, r6
 8000b36:	f000 fc05 	bl	8001344 <_isatty_r>
 8000b3a:	b128      	cbz	r0, 8000b48 <__smakebuf_r+0x74>
 8000b3c:	89a3      	ldrh	r3, [r4, #12]
 8000b3e:	f023 0303 	bic.w	r3, r3, #3
 8000b42:	f043 0301 	orr.w	r3, r3, #1
 8000b46:	81a3      	strh	r3, [r4, #12]
 8000b48:	89a3      	ldrh	r3, [r4, #12]
 8000b4a:	431d      	orrs	r5, r3
 8000b4c:	81a5      	strh	r5, [r4, #12]
 8000b4e:	e7cd      	b.n	8000aec <__smakebuf_r+0x18>
 8000b50:	08000941 	.word	0x08000941

08000b54 <_free_r>:
 8000b54:	b538      	push	{r3, r4, r5, lr}
 8000b56:	4605      	mov	r5, r0
 8000b58:	2900      	cmp	r1, #0
 8000b5a:	d045      	beq.n	8000be8 <_free_r+0x94>
 8000b5c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000b60:	1f0c      	subs	r4, r1, #4
 8000b62:	2b00      	cmp	r3, #0
 8000b64:	bfb8      	it	lt
 8000b66:	18e4      	addlt	r4, r4, r3
 8000b68:	f000 fc0e 	bl	8001388 <__malloc_lock>
 8000b6c:	4a1f      	ldr	r2, [pc, #124]	; (8000bec <_free_r+0x98>)
 8000b6e:	6813      	ldr	r3, [r2, #0]
 8000b70:	4610      	mov	r0, r2
 8000b72:	b933      	cbnz	r3, 8000b82 <_free_r+0x2e>
 8000b74:	6063      	str	r3, [r4, #4]
 8000b76:	6014      	str	r4, [r2, #0]
 8000b78:	4628      	mov	r0, r5
 8000b7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b7e:	f000 bc04 	b.w	800138a <__malloc_unlock>
 8000b82:	42a3      	cmp	r3, r4
 8000b84:	d90c      	bls.n	8000ba0 <_free_r+0x4c>
 8000b86:	6821      	ldr	r1, [r4, #0]
 8000b88:	1862      	adds	r2, r4, r1
 8000b8a:	4293      	cmp	r3, r2
 8000b8c:	bf04      	itt	eq
 8000b8e:	681a      	ldreq	r2, [r3, #0]
 8000b90:	685b      	ldreq	r3, [r3, #4]
 8000b92:	6063      	str	r3, [r4, #4]
 8000b94:	bf04      	itt	eq
 8000b96:	1852      	addeq	r2, r2, r1
 8000b98:	6022      	streq	r2, [r4, #0]
 8000b9a:	6004      	str	r4, [r0, #0]
 8000b9c:	e7ec      	b.n	8000b78 <_free_r+0x24>
 8000b9e:	4613      	mov	r3, r2
 8000ba0:	685a      	ldr	r2, [r3, #4]
 8000ba2:	b10a      	cbz	r2, 8000ba8 <_free_r+0x54>
 8000ba4:	42a2      	cmp	r2, r4
 8000ba6:	d9fa      	bls.n	8000b9e <_free_r+0x4a>
 8000ba8:	6819      	ldr	r1, [r3, #0]
 8000baa:	1858      	adds	r0, r3, r1
 8000bac:	42a0      	cmp	r0, r4
 8000bae:	d10b      	bne.n	8000bc8 <_free_r+0x74>
 8000bb0:	6820      	ldr	r0, [r4, #0]
 8000bb2:	4401      	add	r1, r0
 8000bb4:	1858      	adds	r0, r3, r1
 8000bb6:	4282      	cmp	r2, r0
 8000bb8:	6019      	str	r1, [r3, #0]
 8000bba:	d1dd      	bne.n	8000b78 <_free_r+0x24>
 8000bbc:	6810      	ldr	r0, [r2, #0]
 8000bbe:	6852      	ldr	r2, [r2, #4]
 8000bc0:	605a      	str	r2, [r3, #4]
 8000bc2:	4401      	add	r1, r0
 8000bc4:	6019      	str	r1, [r3, #0]
 8000bc6:	e7d7      	b.n	8000b78 <_free_r+0x24>
 8000bc8:	d902      	bls.n	8000bd0 <_free_r+0x7c>
 8000bca:	230c      	movs	r3, #12
 8000bcc:	602b      	str	r3, [r5, #0]
 8000bce:	e7d3      	b.n	8000b78 <_free_r+0x24>
 8000bd0:	6820      	ldr	r0, [r4, #0]
 8000bd2:	1821      	adds	r1, r4, r0
 8000bd4:	428a      	cmp	r2, r1
 8000bd6:	bf04      	itt	eq
 8000bd8:	6811      	ldreq	r1, [r2, #0]
 8000bda:	6852      	ldreq	r2, [r2, #4]
 8000bdc:	6062      	str	r2, [r4, #4]
 8000bde:	bf04      	itt	eq
 8000be0:	1809      	addeq	r1, r1, r0
 8000be2:	6021      	streq	r1, [r4, #0]
 8000be4:	605c      	str	r4, [r3, #4]
 8000be6:	e7c7      	b.n	8000b78 <_free_r+0x24>
 8000be8:	bd38      	pop	{r3, r4, r5, pc}
 8000bea:	bf00      	nop
 8000bec:	20000084 	.word	0x20000084

08000bf0 <_malloc_r>:
 8000bf0:	b570      	push	{r4, r5, r6, lr}
 8000bf2:	1ccd      	adds	r5, r1, #3
 8000bf4:	f025 0503 	bic.w	r5, r5, #3
 8000bf8:	3508      	adds	r5, #8
 8000bfa:	2d0c      	cmp	r5, #12
 8000bfc:	bf38      	it	cc
 8000bfe:	250c      	movcc	r5, #12
 8000c00:	2d00      	cmp	r5, #0
 8000c02:	4606      	mov	r6, r0
 8000c04:	db01      	blt.n	8000c0a <_malloc_r+0x1a>
 8000c06:	42a9      	cmp	r1, r5
 8000c08:	d903      	bls.n	8000c12 <_malloc_r+0x22>
 8000c0a:	230c      	movs	r3, #12
 8000c0c:	6033      	str	r3, [r6, #0]
 8000c0e:	2000      	movs	r0, #0
 8000c10:	bd70      	pop	{r4, r5, r6, pc}
 8000c12:	f000 fbb9 	bl	8001388 <__malloc_lock>
 8000c16:	4a21      	ldr	r2, [pc, #132]	; (8000c9c <_malloc_r+0xac>)
 8000c18:	6814      	ldr	r4, [r2, #0]
 8000c1a:	4621      	mov	r1, r4
 8000c1c:	b991      	cbnz	r1, 8000c44 <_malloc_r+0x54>
 8000c1e:	4c20      	ldr	r4, [pc, #128]	; (8000ca0 <_malloc_r+0xb0>)
 8000c20:	6823      	ldr	r3, [r4, #0]
 8000c22:	b91b      	cbnz	r3, 8000c2c <_malloc_r+0x3c>
 8000c24:	4630      	mov	r0, r6
 8000c26:	f000 fb05 	bl	8001234 <_sbrk_r>
 8000c2a:	6020      	str	r0, [r4, #0]
 8000c2c:	4629      	mov	r1, r5
 8000c2e:	4630      	mov	r0, r6
 8000c30:	f000 fb00 	bl	8001234 <_sbrk_r>
 8000c34:	1c43      	adds	r3, r0, #1
 8000c36:	d124      	bne.n	8000c82 <_malloc_r+0x92>
 8000c38:	230c      	movs	r3, #12
 8000c3a:	6033      	str	r3, [r6, #0]
 8000c3c:	4630      	mov	r0, r6
 8000c3e:	f000 fba4 	bl	800138a <__malloc_unlock>
 8000c42:	e7e4      	b.n	8000c0e <_malloc_r+0x1e>
 8000c44:	680b      	ldr	r3, [r1, #0]
 8000c46:	1b5b      	subs	r3, r3, r5
 8000c48:	d418      	bmi.n	8000c7c <_malloc_r+0x8c>
 8000c4a:	2b0b      	cmp	r3, #11
 8000c4c:	d90f      	bls.n	8000c6e <_malloc_r+0x7e>
 8000c4e:	600b      	str	r3, [r1, #0]
 8000c50:	50cd      	str	r5, [r1, r3]
 8000c52:	18cc      	adds	r4, r1, r3
 8000c54:	4630      	mov	r0, r6
 8000c56:	f000 fb98 	bl	800138a <__malloc_unlock>
 8000c5a:	f104 000b 	add.w	r0, r4, #11
 8000c5e:	1d23      	adds	r3, r4, #4
 8000c60:	f020 0007 	bic.w	r0, r0, #7
 8000c64:	1ac3      	subs	r3, r0, r3
 8000c66:	d0d3      	beq.n	8000c10 <_malloc_r+0x20>
 8000c68:	425a      	negs	r2, r3
 8000c6a:	50e2      	str	r2, [r4, r3]
 8000c6c:	e7d0      	b.n	8000c10 <_malloc_r+0x20>
 8000c6e:	428c      	cmp	r4, r1
 8000c70:	684b      	ldr	r3, [r1, #4]
 8000c72:	bf16      	itet	ne
 8000c74:	6063      	strne	r3, [r4, #4]
 8000c76:	6013      	streq	r3, [r2, #0]
 8000c78:	460c      	movne	r4, r1
 8000c7a:	e7eb      	b.n	8000c54 <_malloc_r+0x64>
 8000c7c:	460c      	mov	r4, r1
 8000c7e:	6849      	ldr	r1, [r1, #4]
 8000c80:	e7cc      	b.n	8000c1c <_malloc_r+0x2c>
 8000c82:	1cc4      	adds	r4, r0, #3
 8000c84:	f024 0403 	bic.w	r4, r4, #3
 8000c88:	42a0      	cmp	r0, r4
 8000c8a:	d005      	beq.n	8000c98 <_malloc_r+0xa8>
 8000c8c:	1a21      	subs	r1, r4, r0
 8000c8e:	4630      	mov	r0, r6
 8000c90:	f000 fad0 	bl	8001234 <_sbrk_r>
 8000c94:	3001      	adds	r0, #1
 8000c96:	d0cf      	beq.n	8000c38 <_malloc_r+0x48>
 8000c98:	6025      	str	r5, [r4, #0]
 8000c9a:	e7db      	b.n	8000c54 <_malloc_r+0x64>
 8000c9c:	20000084 	.word	0x20000084
 8000ca0:	20000088 	.word	0x20000088

08000ca4 <__sfputc_r>:
 8000ca4:	6893      	ldr	r3, [r2, #8]
 8000ca6:	3b01      	subs	r3, #1
 8000ca8:	2b00      	cmp	r3, #0
 8000caa:	b410      	push	{r4}
 8000cac:	6093      	str	r3, [r2, #8]
 8000cae:	da08      	bge.n	8000cc2 <__sfputc_r+0x1e>
 8000cb0:	6994      	ldr	r4, [r2, #24]
 8000cb2:	42a3      	cmp	r3, r4
 8000cb4:	db01      	blt.n	8000cba <__sfputc_r+0x16>
 8000cb6:	290a      	cmp	r1, #10
 8000cb8:	d103      	bne.n	8000cc2 <__sfputc_r+0x1e>
 8000cba:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cbe:	f7ff bcab 	b.w	8000618 <__swbuf_r>
 8000cc2:	6813      	ldr	r3, [r2, #0]
 8000cc4:	1c58      	adds	r0, r3, #1
 8000cc6:	6010      	str	r0, [r2, #0]
 8000cc8:	7019      	strb	r1, [r3, #0]
 8000cca:	4608      	mov	r0, r1
 8000ccc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000cd0:	4770      	bx	lr

08000cd2 <__sfputs_r>:
 8000cd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cd4:	4606      	mov	r6, r0
 8000cd6:	460f      	mov	r7, r1
 8000cd8:	4614      	mov	r4, r2
 8000cda:	18d5      	adds	r5, r2, r3
 8000cdc:	42ac      	cmp	r4, r5
 8000cde:	d101      	bne.n	8000ce4 <__sfputs_r+0x12>
 8000ce0:	2000      	movs	r0, #0
 8000ce2:	e007      	b.n	8000cf4 <__sfputs_r+0x22>
 8000ce4:	463a      	mov	r2, r7
 8000ce6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000cea:	4630      	mov	r0, r6
 8000cec:	f7ff ffda 	bl	8000ca4 <__sfputc_r>
 8000cf0:	1c43      	adds	r3, r0, #1
 8000cf2:	d1f3      	bne.n	8000cdc <__sfputs_r+0xa>
 8000cf4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000cf8 <_vfiprintf_r>:
 8000cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cfc:	460c      	mov	r4, r1
 8000cfe:	b09d      	sub	sp, #116	; 0x74
 8000d00:	4617      	mov	r7, r2
 8000d02:	461d      	mov	r5, r3
 8000d04:	4606      	mov	r6, r0
 8000d06:	b118      	cbz	r0, 8000d10 <_vfiprintf_r+0x18>
 8000d08:	6983      	ldr	r3, [r0, #24]
 8000d0a:	b90b      	cbnz	r3, 8000d10 <_vfiprintf_r+0x18>
 8000d0c:	f7ff fe34 	bl	8000978 <__sinit>
 8000d10:	4b7c      	ldr	r3, [pc, #496]	; (8000f04 <_vfiprintf_r+0x20c>)
 8000d12:	429c      	cmp	r4, r3
 8000d14:	d158      	bne.n	8000dc8 <_vfiprintf_r+0xd0>
 8000d16:	6874      	ldr	r4, [r6, #4]
 8000d18:	89a3      	ldrh	r3, [r4, #12]
 8000d1a:	0718      	lsls	r0, r3, #28
 8000d1c:	d55e      	bpl.n	8000ddc <_vfiprintf_r+0xe4>
 8000d1e:	6923      	ldr	r3, [r4, #16]
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	d05b      	beq.n	8000ddc <_vfiprintf_r+0xe4>
 8000d24:	2300      	movs	r3, #0
 8000d26:	9309      	str	r3, [sp, #36]	; 0x24
 8000d28:	2320      	movs	r3, #32
 8000d2a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000d2e:	2330      	movs	r3, #48	; 0x30
 8000d30:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d34:	9503      	str	r5, [sp, #12]
 8000d36:	f04f 0b01 	mov.w	fp, #1
 8000d3a:	46b8      	mov	r8, r7
 8000d3c:	4645      	mov	r5, r8
 8000d3e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000d42:	b10b      	cbz	r3, 8000d48 <_vfiprintf_r+0x50>
 8000d44:	2b25      	cmp	r3, #37	; 0x25
 8000d46:	d154      	bne.n	8000df2 <_vfiprintf_r+0xfa>
 8000d48:	ebb8 0a07 	subs.w	sl, r8, r7
 8000d4c:	d00b      	beq.n	8000d66 <_vfiprintf_r+0x6e>
 8000d4e:	4653      	mov	r3, sl
 8000d50:	463a      	mov	r2, r7
 8000d52:	4621      	mov	r1, r4
 8000d54:	4630      	mov	r0, r6
 8000d56:	f7ff ffbc 	bl	8000cd2 <__sfputs_r>
 8000d5a:	3001      	adds	r0, #1
 8000d5c:	f000 80c2 	beq.w	8000ee4 <_vfiprintf_r+0x1ec>
 8000d60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000d62:	4453      	add	r3, sl
 8000d64:	9309      	str	r3, [sp, #36]	; 0x24
 8000d66:	f898 3000 	ldrb.w	r3, [r8]
 8000d6a:	2b00      	cmp	r3, #0
 8000d6c:	f000 80ba 	beq.w	8000ee4 <_vfiprintf_r+0x1ec>
 8000d70:	2300      	movs	r3, #0
 8000d72:	f04f 32ff 	mov.w	r2, #4294967295
 8000d76:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d7a:	9304      	str	r3, [sp, #16]
 8000d7c:	9307      	str	r3, [sp, #28]
 8000d7e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d82:	931a      	str	r3, [sp, #104]	; 0x68
 8000d84:	46a8      	mov	r8, r5
 8000d86:	2205      	movs	r2, #5
 8000d88:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000d8c:	485e      	ldr	r0, [pc, #376]	; (8000f08 <_vfiprintf_r+0x210>)
 8000d8e:	f7ff fa2f 	bl	80001f0 <memchr>
 8000d92:	9b04      	ldr	r3, [sp, #16]
 8000d94:	bb78      	cbnz	r0, 8000df6 <_vfiprintf_r+0xfe>
 8000d96:	06d9      	lsls	r1, r3, #27
 8000d98:	bf44      	itt	mi
 8000d9a:	2220      	movmi	r2, #32
 8000d9c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000da0:	071a      	lsls	r2, r3, #28
 8000da2:	bf44      	itt	mi
 8000da4:	222b      	movmi	r2, #43	; 0x2b
 8000da6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000daa:	782a      	ldrb	r2, [r5, #0]
 8000dac:	2a2a      	cmp	r2, #42	; 0x2a
 8000dae:	d02a      	beq.n	8000e06 <_vfiprintf_r+0x10e>
 8000db0:	9a07      	ldr	r2, [sp, #28]
 8000db2:	46a8      	mov	r8, r5
 8000db4:	2000      	movs	r0, #0
 8000db6:	250a      	movs	r5, #10
 8000db8:	4641      	mov	r1, r8
 8000dba:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000dbe:	3b30      	subs	r3, #48	; 0x30
 8000dc0:	2b09      	cmp	r3, #9
 8000dc2:	d969      	bls.n	8000e98 <_vfiprintf_r+0x1a0>
 8000dc4:	b360      	cbz	r0, 8000e20 <_vfiprintf_r+0x128>
 8000dc6:	e024      	b.n	8000e12 <_vfiprintf_r+0x11a>
 8000dc8:	4b50      	ldr	r3, [pc, #320]	; (8000f0c <_vfiprintf_r+0x214>)
 8000dca:	429c      	cmp	r4, r3
 8000dcc:	d101      	bne.n	8000dd2 <_vfiprintf_r+0xda>
 8000dce:	68b4      	ldr	r4, [r6, #8]
 8000dd0:	e7a2      	b.n	8000d18 <_vfiprintf_r+0x20>
 8000dd2:	4b4f      	ldr	r3, [pc, #316]	; (8000f10 <_vfiprintf_r+0x218>)
 8000dd4:	429c      	cmp	r4, r3
 8000dd6:	bf08      	it	eq
 8000dd8:	68f4      	ldreq	r4, [r6, #12]
 8000dda:	e79d      	b.n	8000d18 <_vfiprintf_r+0x20>
 8000ddc:	4621      	mov	r1, r4
 8000dde:	4630      	mov	r0, r6
 8000de0:	f7ff fc6c 	bl	80006bc <__swsetup_r>
 8000de4:	2800      	cmp	r0, #0
 8000de6:	d09d      	beq.n	8000d24 <_vfiprintf_r+0x2c>
 8000de8:	f04f 30ff 	mov.w	r0, #4294967295
 8000dec:	b01d      	add	sp, #116	; 0x74
 8000dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000df2:	46a8      	mov	r8, r5
 8000df4:	e7a2      	b.n	8000d3c <_vfiprintf_r+0x44>
 8000df6:	4a44      	ldr	r2, [pc, #272]	; (8000f08 <_vfiprintf_r+0x210>)
 8000df8:	1a80      	subs	r0, r0, r2
 8000dfa:	fa0b f000 	lsl.w	r0, fp, r0
 8000dfe:	4318      	orrs	r0, r3
 8000e00:	9004      	str	r0, [sp, #16]
 8000e02:	4645      	mov	r5, r8
 8000e04:	e7be      	b.n	8000d84 <_vfiprintf_r+0x8c>
 8000e06:	9a03      	ldr	r2, [sp, #12]
 8000e08:	1d11      	adds	r1, r2, #4
 8000e0a:	6812      	ldr	r2, [r2, #0]
 8000e0c:	9103      	str	r1, [sp, #12]
 8000e0e:	2a00      	cmp	r2, #0
 8000e10:	db01      	blt.n	8000e16 <_vfiprintf_r+0x11e>
 8000e12:	9207      	str	r2, [sp, #28]
 8000e14:	e004      	b.n	8000e20 <_vfiprintf_r+0x128>
 8000e16:	4252      	negs	r2, r2
 8000e18:	f043 0302 	orr.w	r3, r3, #2
 8000e1c:	9207      	str	r2, [sp, #28]
 8000e1e:	9304      	str	r3, [sp, #16]
 8000e20:	f898 3000 	ldrb.w	r3, [r8]
 8000e24:	2b2e      	cmp	r3, #46	; 0x2e
 8000e26:	d10e      	bne.n	8000e46 <_vfiprintf_r+0x14e>
 8000e28:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000e2c:	2b2a      	cmp	r3, #42	; 0x2a
 8000e2e:	d138      	bne.n	8000ea2 <_vfiprintf_r+0x1aa>
 8000e30:	9b03      	ldr	r3, [sp, #12]
 8000e32:	1d1a      	adds	r2, r3, #4
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	9203      	str	r2, [sp, #12]
 8000e38:	2b00      	cmp	r3, #0
 8000e3a:	bfb8      	it	lt
 8000e3c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000e40:	f108 0802 	add.w	r8, r8, #2
 8000e44:	9305      	str	r3, [sp, #20]
 8000e46:	4d33      	ldr	r5, [pc, #204]	; (8000f14 <_vfiprintf_r+0x21c>)
 8000e48:	f898 1000 	ldrb.w	r1, [r8]
 8000e4c:	2203      	movs	r2, #3
 8000e4e:	4628      	mov	r0, r5
 8000e50:	f7ff f9ce 	bl	80001f0 <memchr>
 8000e54:	b140      	cbz	r0, 8000e68 <_vfiprintf_r+0x170>
 8000e56:	2340      	movs	r3, #64	; 0x40
 8000e58:	1b40      	subs	r0, r0, r5
 8000e5a:	fa03 f000 	lsl.w	r0, r3, r0
 8000e5e:	9b04      	ldr	r3, [sp, #16]
 8000e60:	4303      	orrs	r3, r0
 8000e62:	f108 0801 	add.w	r8, r8, #1
 8000e66:	9304      	str	r3, [sp, #16]
 8000e68:	f898 1000 	ldrb.w	r1, [r8]
 8000e6c:	482a      	ldr	r0, [pc, #168]	; (8000f18 <_vfiprintf_r+0x220>)
 8000e6e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e72:	2206      	movs	r2, #6
 8000e74:	f108 0701 	add.w	r7, r8, #1
 8000e78:	f7ff f9ba 	bl	80001f0 <memchr>
 8000e7c:	2800      	cmp	r0, #0
 8000e7e:	d037      	beq.n	8000ef0 <_vfiprintf_r+0x1f8>
 8000e80:	4b26      	ldr	r3, [pc, #152]	; (8000f1c <_vfiprintf_r+0x224>)
 8000e82:	bb1b      	cbnz	r3, 8000ecc <_vfiprintf_r+0x1d4>
 8000e84:	9b03      	ldr	r3, [sp, #12]
 8000e86:	3307      	adds	r3, #7
 8000e88:	f023 0307 	bic.w	r3, r3, #7
 8000e8c:	3308      	adds	r3, #8
 8000e8e:	9303      	str	r3, [sp, #12]
 8000e90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e92:	444b      	add	r3, r9
 8000e94:	9309      	str	r3, [sp, #36]	; 0x24
 8000e96:	e750      	b.n	8000d3a <_vfiprintf_r+0x42>
 8000e98:	fb05 3202 	mla	r2, r5, r2, r3
 8000e9c:	2001      	movs	r0, #1
 8000e9e:	4688      	mov	r8, r1
 8000ea0:	e78a      	b.n	8000db8 <_vfiprintf_r+0xc0>
 8000ea2:	2300      	movs	r3, #0
 8000ea4:	f108 0801 	add.w	r8, r8, #1
 8000ea8:	9305      	str	r3, [sp, #20]
 8000eaa:	4619      	mov	r1, r3
 8000eac:	250a      	movs	r5, #10
 8000eae:	4640      	mov	r0, r8
 8000eb0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000eb4:	3a30      	subs	r2, #48	; 0x30
 8000eb6:	2a09      	cmp	r2, #9
 8000eb8:	d903      	bls.n	8000ec2 <_vfiprintf_r+0x1ca>
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d0c3      	beq.n	8000e46 <_vfiprintf_r+0x14e>
 8000ebe:	9105      	str	r1, [sp, #20]
 8000ec0:	e7c1      	b.n	8000e46 <_vfiprintf_r+0x14e>
 8000ec2:	fb05 2101 	mla	r1, r5, r1, r2
 8000ec6:	2301      	movs	r3, #1
 8000ec8:	4680      	mov	r8, r0
 8000eca:	e7f0      	b.n	8000eae <_vfiprintf_r+0x1b6>
 8000ecc:	ab03      	add	r3, sp, #12
 8000ece:	9300      	str	r3, [sp, #0]
 8000ed0:	4622      	mov	r2, r4
 8000ed2:	4b13      	ldr	r3, [pc, #76]	; (8000f20 <_vfiprintf_r+0x228>)
 8000ed4:	a904      	add	r1, sp, #16
 8000ed6:	4630      	mov	r0, r6
 8000ed8:	f3af 8000 	nop.w
 8000edc:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000ee0:	4681      	mov	r9, r0
 8000ee2:	d1d5      	bne.n	8000e90 <_vfiprintf_r+0x198>
 8000ee4:	89a3      	ldrh	r3, [r4, #12]
 8000ee6:	065b      	lsls	r3, r3, #25
 8000ee8:	f53f af7e 	bmi.w	8000de8 <_vfiprintf_r+0xf0>
 8000eec:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000eee:	e77d      	b.n	8000dec <_vfiprintf_r+0xf4>
 8000ef0:	ab03      	add	r3, sp, #12
 8000ef2:	9300      	str	r3, [sp, #0]
 8000ef4:	4622      	mov	r2, r4
 8000ef6:	4b0a      	ldr	r3, [pc, #40]	; (8000f20 <_vfiprintf_r+0x228>)
 8000ef8:	a904      	add	r1, sp, #16
 8000efa:	4630      	mov	r0, r6
 8000efc:	f000 f888 	bl	8001010 <_printf_i>
 8000f00:	e7ec      	b.n	8000edc <_vfiprintf_r+0x1e4>
 8000f02:	bf00      	nop
 8000f04:	0800140c 	.word	0x0800140c
 8000f08:	0800144c 	.word	0x0800144c
 8000f0c:	0800142c 	.word	0x0800142c
 8000f10:	080013ec 	.word	0x080013ec
 8000f14:	08001452 	.word	0x08001452
 8000f18:	08001456 	.word	0x08001456
 8000f1c:	00000000 	.word	0x00000000
 8000f20:	08000cd3 	.word	0x08000cd3

08000f24 <_printf_common>:
 8000f24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f28:	4691      	mov	r9, r2
 8000f2a:	461f      	mov	r7, r3
 8000f2c:	688a      	ldr	r2, [r1, #8]
 8000f2e:	690b      	ldr	r3, [r1, #16]
 8000f30:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000f34:	4293      	cmp	r3, r2
 8000f36:	bfb8      	it	lt
 8000f38:	4613      	movlt	r3, r2
 8000f3a:	f8c9 3000 	str.w	r3, [r9]
 8000f3e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000f42:	4606      	mov	r6, r0
 8000f44:	460c      	mov	r4, r1
 8000f46:	b112      	cbz	r2, 8000f4e <_printf_common+0x2a>
 8000f48:	3301      	adds	r3, #1
 8000f4a:	f8c9 3000 	str.w	r3, [r9]
 8000f4e:	6823      	ldr	r3, [r4, #0]
 8000f50:	0699      	lsls	r1, r3, #26
 8000f52:	bf42      	ittt	mi
 8000f54:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000f58:	3302      	addmi	r3, #2
 8000f5a:	f8c9 3000 	strmi.w	r3, [r9]
 8000f5e:	6825      	ldr	r5, [r4, #0]
 8000f60:	f015 0506 	ands.w	r5, r5, #6
 8000f64:	d107      	bne.n	8000f76 <_printf_common+0x52>
 8000f66:	f104 0a19 	add.w	sl, r4, #25
 8000f6a:	68e3      	ldr	r3, [r4, #12]
 8000f6c:	f8d9 2000 	ldr.w	r2, [r9]
 8000f70:	1a9b      	subs	r3, r3, r2
 8000f72:	42ab      	cmp	r3, r5
 8000f74:	dc28      	bgt.n	8000fc8 <_printf_common+0xa4>
 8000f76:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000f7a:	6822      	ldr	r2, [r4, #0]
 8000f7c:	3300      	adds	r3, #0
 8000f7e:	bf18      	it	ne
 8000f80:	2301      	movne	r3, #1
 8000f82:	0692      	lsls	r2, r2, #26
 8000f84:	d42d      	bmi.n	8000fe2 <_printf_common+0xbe>
 8000f86:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f8a:	4639      	mov	r1, r7
 8000f8c:	4630      	mov	r0, r6
 8000f8e:	47c0      	blx	r8
 8000f90:	3001      	adds	r0, #1
 8000f92:	d020      	beq.n	8000fd6 <_printf_common+0xb2>
 8000f94:	6823      	ldr	r3, [r4, #0]
 8000f96:	68e5      	ldr	r5, [r4, #12]
 8000f98:	f8d9 2000 	ldr.w	r2, [r9]
 8000f9c:	f003 0306 	and.w	r3, r3, #6
 8000fa0:	2b04      	cmp	r3, #4
 8000fa2:	bf08      	it	eq
 8000fa4:	1aad      	subeq	r5, r5, r2
 8000fa6:	68a3      	ldr	r3, [r4, #8]
 8000fa8:	6922      	ldr	r2, [r4, #16]
 8000faa:	bf0c      	ite	eq
 8000fac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000fb0:	2500      	movne	r5, #0
 8000fb2:	4293      	cmp	r3, r2
 8000fb4:	bfc4      	itt	gt
 8000fb6:	1a9b      	subgt	r3, r3, r2
 8000fb8:	18ed      	addgt	r5, r5, r3
 8000fba:	f04f 0900 	mov.w	r9, #0
 8000fbe:	341a      	adds	r4, #26
 8000fc0:	454d      	cmp	r5, r9
 8000fc2:	d11a      	bne.n	8000ffa <_printf_common+0xd6>
 8000fc4:	2000      	movs	r0, #0
 8000fc6:	e008      	b.n	8000fda <_printf_common+0xb6>
 8000fc8:	2301      	movs	r3, #1
 8000fca:	4652      	mov	r2, sl
 8000fcc:	4639      	mov	r1, r7
 8000fce:	4630      	mov	r0, r6
 8000fd0:	47c0      	blx	r8
 8000fd2:	3001      	adds	r0, #1
 8000fd4:	d103      	bne.n	8000fde <_printf_common+0xba>
 8000fd6:	f04f 30ff 	mov.w	r0, #4294967295
 8000fda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fde:	3501      	adds	r5, #1
 8000fe0:	e7c3      	b.n	8000f6a <_printf_common+0x46>
 8000fe2:	18e1      	adds	r1, r4, r3
 8000fe4:	1c5a      	adds	r2, r3, #1
 8000fe6:	2030      	movs	r0, #48	; 0x30
 8000fe8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000fec:	4422      	add	r2, r4
 8000fee:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000ff2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000ff6:	3302      	adds	r3, #2
 8000ff8:	e7c5      	b.n	8000f86 <_printf_common+0x62>
 8000ffa:	2301      	movs	r3, #1
 8000ffc:	4622      	mov	r2, r4
 8000ffe:	4639      	mov	r1, r7
 8001000:	4630      	mov	r0, r6
 8001002:	47c0      	blx	r8
 8001004:	3001      	adds	r0, #1
 8001006:	d0e6      	beq.n	8000fd6 <_printf_common+0xb2>
 8001008:	f109 0901 	add.w	r9, r9, #1
 800100c:	e7d8      	b.n	8000fc0 <_printf_common+0x9c>
	...

08001010 <_printf_i>:
 8001010:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001014:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001018:	460c      	mov	r4, r1
 800101a:	7e09      	ldrb	r1, [r1, #24]
 800101c:	b085      	sub	sp, #20
 800101e:	296e      	cmp	r1, #110	; 0x6e
 8001020:	4617      	mov	r7, r2
 8001022:	4606      	mov	r6, r0
 8001024:	4698      	mov	r8, r3
 8001026:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001028:	f000 80b3 	beq.w	8001192 <_printf_i+0x182>
 800102c:	d822      	bhi.n	8001074 <_printf_i+0x64>
 800102e:	2963      	cmp	r1, #99	; 0x63
 8001030:	d036      	beq.n	80010a0 <_printf_i+0x90>
 8001032:	d80a      	bhi.n	800104a <_printf_i+0x3a>
 8001034:	2900      	cmp	r1, #0
 8001036:	f000 80b9 	beq.w	80011ac <_printf_i+0x19c>
 800103a:	2958      	cmp	r1, #88	; 0x58
 800103c:	f000 8083 	beq.w	8001146 <_printf_i+0x136>
 8001040:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001044:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001048:	e032      	b.n	80010b0 <_printf_i+0xa0>
 800104a:	2964      	cmp	r1, #100	; 0x64
 800104c:	d001      	beq.n	8001052 <_printf_i+0x42>
 800104e:	2969      	cmp	r1, #105	; 0x69
 8001050:	d1f6      	bne.n	8001040 <_printf_i+0x30>
 8001052:	6820      	ldr	r0, [r4, #0]
 8001054:	6813      	ldr	r3, [r2, #0]
 8001056:	0605      	lsls	r5, r0, #24
 8001058:	f103 0104 	add.w	r1, r3, #4
 800105c:	d52a      	bpl.n	80010b4 <_printf_i+0xa4>
 800105e:	681b      	ldr	r3, [r3, #0]
 8001060:	6011      	str	r1, [r2, #0]
 8001062:	2b00      	cmp	r3, #0
 8001064:	da03      	bge.n	800106e <_printf_i+0x5e>
 8001066:	222d      	movs	r2, #45	; 0x2d
 8001068:	425b      	negs	r3, r3
 800106a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800106e:	486f      	ldr	r0, [pc, #444]	; (800122c <_printf_i+0x21c>)
 8001070:	220a      	movs	r2, #10
 8001072:	e039      	b.n	80010e8 <_printf_i+0xd8>
 8001074:	2973      	cmp	r1, #115	; 0x73
 8001076:	f000 809d 	beq.w	80011b4 <_printf_i+0x1a4>
 800107a:	d808      	bhi.n	800108e <_printf_i+0x7e>
 800107c:	296f      	cmp	r1, #111	; 0x6f
 800107e:	d020      	beq.n	80010c2 <_printf_i+0xb2>
 8001080:	2970      	cmp	r1, #112	; 0x70
 8001082:	d1dd      	bne.n	8001040 <_printf_i+0x30>
 8001084:	6823      	ldr	r3, [r4, #0]
 8001086:	f043 0320 	orr.w	r3, r3, #32
 800108a:	6023      	str	r3, [r4, #0]
 800108c:	e003      	b.n	8001096 <_printf_i+0x86>
 800108e:	2975      	cmp	r1, #117	; 0x75
 8001090:	d017      	beq.n	80010c2 <_printf_i+0xb2>
 8001092:	2978      	cmp	r1, #120	; 0x78
 8001094:	d1d4      	bne.n	8001040 <_printf_i+0x30>
 8001096:	2378      	movs	r3, #120	; 0x78
 8001098:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800109c:	4864      	ldr	r0, [pc, #400]	; (8001230 <_printf_i+0x220>)
 800109e:	e055      	b.n	800114c <_printf_i+0x13c>
 80010a0:	6813      	ldr	r3, [r2, #0]
 80010a2:	1d19      	adds	r1, r3, #4
 80010a4:	681b      	ldr	r3, [r3, #0]
 80010a6:	6011      	str	r1, [r2, #0]
 80010a8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80010ac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80010b0:	2301      	movs	r3, #1
 80010b2:	e08c      	b.n	80011ce <_printf_i+0x1be>
 80010b4:	681b      	ldr	r3, [r3, #0]
 80010b6:	6011      	str	r1, [r2, #0]
 80010b8:	f010 0f40 	tst.w	r0, #64	; 0x40
 80010bc:	bf18      	it	ne
 80010be:	b21b      	sxthne	r3, r3
 80010c0:	e7cf      	b.n	8001062 <_printf_i+0x52>
 80010c2:	6813      	ldr	r3, [r2, #0]
 80010c4:	6825      	ldr	r5, [r4, #0]
 80010c6:	1d18      	adds	r0, r3, #4
 80010c8:	6010      	str	r0, [r2, #0]
 80010ca:	0628      	lsls	r0, r5, #24
 80010cc:	d501      	bpl.n	80010d2 <_printf_i+0xc2>
 80010ce:	681b      	ldr	r3, [r3, #0]
 80010d0:	e002      	b.n	80010d8 <_printf_i+0xc8>
 80010d2:	0668      	lsls	r0, r5, #25
 80010d4:	d5fb      	bpl.n	80010ce <_printf_i+0xbe>
 80010d6:	881b      	ldrh	r3, [r3, #0]
 80010d8:	4854      	ldr	r0, [pc, #336]	; (800122c <_printf_i+0x21c>)
 80010da:	296f      	cmp	r1, #111	; 0x6f
 80010dc:	bf14      	ite	ne
 80010de:	220a      	movne	r2, #10
 80010e0:	2208      	moveq	r2, #8
 80010e2:	2100      	movs	r1, #0
 80010e4:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80010e8:	6865      	ldr	r5, [r4, #4]
 80010ea:	60a5      	str	r5, [r4, #8]
 80010ec:	2d00      	cmp	r5, #0
 80010ee:	f2c0 8095 	blt.w	800121c <_printf_i+0x20c>
 80010f2:	6821      	ldr	r1, [r4, #0]
 80010f4:	f021 0104 	bic.w	r1, r1, #4
 80010f8:	6021      	str	r1, [r4, #0]
 80010fa:	2b00      	cmp	r3, #0
 80010fc:	d13d      	bne.n	800117a <_printf_i+0x16a>
 80010fe:	2d00      	cmp	r5, #0
 8001100:	f040 808e 	bne.w	8001220 <_printf_i+0x210>
 8001104:	4665      	mov	r5, ip
 8001106:	2a08      	cmp	r2, #8
 8001108:	d10b      	bne.n	8001122 <_printf_i+0x112>
 800110a:	6823      	ldr	r3, [r4, #0]
 800110c:	07db      	lsls	r3, r3, #31
 800110e:	d508      	bpl.n	8001122 <_printf_i+0x112>
 8001110:	6923      	ldr	r3, [r4, #16]
 8001112:	6862      	ldr	r2, [r4, #4]
 8001114:	429a      	cmp	r2, r3
 8001116:	bfde      	ittt	le
 8001118:	2330      	movle	r3, #48	; 0x30
 800111a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800111e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001122:	ebac 0305 	sub.w	r3, ip, r5
 8001126:	6123      	str	r3, [r4, #16]
 8001128:	f8cd 8000 	str.w	r8, [sp]
 800112c:	463b      	mov	r3, r7
 800112e:	aa03      	add	r2, sp, #12
 8001130:	4621      	mov	r1, r4
 8001132:	4630      	mov	r0, r6
 8001134:	f7ff fef6 	bl	8000f24 <_printf_common>
 8001138:	3001      	adds	r0, #1
 800113a:	d14d      	bne.n	80011d8 <_printf_i+0x1c8>
 800113c:	f04f 30ff 	mov.w	r0, #4294967295
 8001140:	b005      	add	sp, #20
 8001142:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001146:	4839      	ldr	r0, [pc, #228]	; (800122c <_printf_i+0x21c>)
 8001148:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 800114c:	6813      	ldr	r3, [r2, #0]
 800114e:	6821      	ldr	r1, [r4, #0]
 8001150:	1d1d      	adds	r5, r3, #4
 8001152:	681b      	ldr	r3, [r3, #0]
 8001154:	6015      	str	r5, [r2, #0]
 8001156:	060a      	lsls	r2, r1, #24
 8001158:	d50b      	bpl.n	8001172 <_printf_i+0x162>
 800115a:	07ca      	lsls	r2, r1, #31
 800115c:	bf44      	itt	mi
 800115e:	f041 0120 	orrmi.w	r1, r1, #32
 8001162:	6021      	strmi	r1, [r4, #0]
 8001164:	b91b      	cbnz	r3, 800116e <_printf_i+0x15e>
 8001166:	6822      	ldr	r2, [r4, #0]
 8001168:	f022 0220 	bic.w	r2, r2, #32
 800116c:	6022      	str	r2, [r4, #0]
 800116e:	2210      	movs	r2, #16
 8001170:	e7b7      	b.n	80010e2 <_printf_i+0xd2>
 8001172:	064d      	lsls	r5, r1, #25
 8001174:	bf48      	it	mi
 8001176:	b29b      	uxthmi	r3, r3
 8001178:	e7ef      	b.n	800115a <_printf_i+0x14a>
 800117a:	4665      	mov	r5, ip
 800117c:	fbb3 f1f2 	udiv	r1, r3, r2
 8001180:	fb02 3311 	mls	r3, r2, r1, r3
 8001184:	5cc3      	ldrb	r3, [r0, r3]
 8001186:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800118a:	460b      	mov	r3, r1
 800118c:	2900      	cmp	r1, #0
 800118e:	d1f5      	bne.n	800117c <_printf_i+0x16c>
 8001190:	e7b9      	b.n	8001106 <_printf_i+0xf6>
 8001192:	6813      	ldr	r3, [r2, #0]
 8001194:	6825      	ldr	r5, [r4, #0]
 8001196:	6961      	ldr	r1, [r4, #20]
 8001198:	1d18      	adds	r0, r3, #4
 800119a:	6010      	str	r0, [r2, #0]
 800119c:	0628      	lsls	r0, r5, #24
 800119e:	681b      	ldr	r3, [r3, #0]
 80011a0:	d501      	bpl.n	80011a6 <_printf_i+0x196>
 80011a2:	6019      	str	r1, [r3, #0]
 80011a4:	e002      	b.n	80011ac <_printf_i+0x19c>
 80011a6:	066a      	lsls	r2, r5, #25
 80011a8:	d5fb      	bpl.n	80011a2 <_printf_i+0x192>
 80011aa:	8019      	strh	r1, [r3, #0]
 80011ac:	2300      	movs	r3, #0
 80011ae:	6123      	str	r3, [r4, #16]
 80011b0:	4665      	mov	r5, ip
 80011b2:	e7b9      	b.n	8001128 <_printf_i+0x118>
 80011b4:	6813      	ldr	r3, [r2, #0]
 80011b6:	1d19      	adds	r1, r3, #4
 80011b8:	6011      	str	r1, [r2, #0]
 80011ba:	681d      	ldr	r5, [r3, #0]
 80011bc:	6862      	ldr	r2, [r4, #4]
 80011be:	2100      	movs	r1, #0
 80011c0:	4628      	mov	r0, r5
 80011c2:	f7ff f815 	bl	80001f0 <memchr>
 80011c6:	b108      	cbz	r0, 80011cc <_printf_i+0x1bc>
 80011c8:	1b40      	subs	r0, r0, r5
 80011ca:	6060      	str	r0, [r4, #4]
 80011cc:	6863      	ldr	r3, [r4, #4]
 80011ce:	6123      	str	r3, [r4, #16]
 80011d0:	2300      	movs	r3, #0
 80011d2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011d6:	e7a7      	b.n	8001128 <_printf_i+0x118>
 80011d8:	6923      	ldr	r3, [r4, #16]
 80011da:	462a      	mov	r2, r5
 80011dc:	4639      	mov	r1, r7
 80011de:	4630      	mov	r0, r6
 80011e0:	47c0      	blx	r8
 80011e2:	3001      	adds	r0, #1
 80011e4:	d0aa      	beq.n	800113c <_printf_i+0x12c>
 80011e6:	6823      	ldr	r3, [r4, #0]
 80011e8:	079b      	lsls	r3, r3, #30
 80011ea:	d413      	bmi.n	8001214 <_printf_i+0x204>
 80011ec:	68e0      	ldr	r0, [r4, #12]
 80011ee:	9b03      	ldr	r3, [sp, #12]
 80011f0:	4298      	cmp	r0, r3
 80011f2:	bfb8      	it	lt
 80011f4:	4618      	movlt	r0, r3
 80011f6:	e7a3      	b.n	8001140 <_printf_i+0x130>
 80011f8:	2301      	movs	r3, #1
 80011fa:	464a      	mov	r2, r9
 80011fc:	4639      	mov	r1, r7
 80011fe:	4630      	mov	r0, r6
 8001200:	47c0      	blx	r8
 8001202:	3001      	adds	r0, #1
 8001204:	d09a      	beq.n	800113c <_printf_i+0x12c>
 8001206:	3501      	adds	r5, #1
 8001208:	68e3      	ldr	r3, [r4, #12]
 800120a:	9a03      	ldr	r2, [sp, #12]
 800120c:	1a9b      	subs	r3, r3, r2
 800120e:	42ab      	cmp	r3, r5
 8001210:	dcf2      	bgt.n	80011f8 <_printf_i+0x1e8>
 8001212:	e7eb      	b.n	80011ec <_printf_i+0x1dc>
 8001214:	2500      	movs	r5, #0
 8001216:	f104 0919 	add.w	r9, r4, #25
 800121a:	e7f5      	b.n	8001208 <_printf_i+0x1f8>
 800121c:	2b00      	cmp	r3, #0
 800121e:	d1ac      	bne.n	800117a <_printf_i+0x16a>
 8001220:	7803      	ldrb	r3, [r0, #0]
 8001222:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001226:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800122a:	e76c      	b.n	8001106 <_printf_i+0xf6>
 800122c:	0800145d 	.word	0x0800145d
 8001230:	0800146e 	.word	0x0800146e

08001234 <_sbrk_r>:
 8001234:	b538      	push	{r3, r4, r5, lr}
 8001236:	4c06      	ldr	r4, [pc, #24]	; (8001250 <_sbrk_r+0x1c>)
 8001238:	2300      	movs	r3, #0
 800123a:	4605      	mov	r5, r0
 800123c:	4608      	mov	r0, r1
 800123e:	6023      	str	r3, [r4, #0]
 8001240:	f7ff f8dc 	bl	80003fc <_sbrk>
 8001244:	1c43      	adds	r3, r0, #1
 8001246:	d102      	bne.n	800124e <_sbrk_r+0x1a>
 8001248:	6823      	ldr	r3, [r4, #0]
 800124a:	b103      	cbz	r3, 800124e <_sbrk_r+0x1a>
 800124c:	602b      	str	r3, [r5, #0]
 800124e:	bd38      	pop	{r3, r4, r5, pc}
 8001250:	2000008c 	.word	0x2000008c

08001254 <__sread>:
 8001254:	b510      	push	{r4, lr}
 8001256:	460c      	mov	r4, r1
 8001258:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800125c:	f000 f896 	bl	800138c <_read_r>
 8001260:	2800      	cmp	r0, #0
 8001262:	bfab      	itete	ge
 8001264:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001266:	89a3      	ldrhlt	r3, [r4, #12]
 8001268:	181b      	addge	r3, r3, r0
 800126a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800126e:	bfac      	ite	ge
 8001270:	6563      	strge	r3, [r4, #84]	; 0x54
 8001272:	81a3      	strhlt	r3, [r4, #12]
 8001274:	bd10      	pop	{r4, pc}

08001276 <__swrite>:
 8001276:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800127a:	461f      	mov	r7, r3
 800127c:	898b      	ldrh	r3, [r1, #12]
 800127e:	05db      	lsls	r3, r3, #23
 8001280:	4605      	mov	r5, r0
 8001282:	460c      	mov	r4, r1
 8001284:	4616      	mov	r6, r2
 8001286:	d505      	bpl.n	8001294 <__swrite+0x1e>
 8001288:	2302      	movs	r3, #2
 800128a:	2200      	movs	r2, #0
 800128c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001290:	f000 f868 	bl	8001364 <_lseek_r>
 8001294:	89a3      	ldrh	r3, [r4, #12]
 8001296:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800129a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800129e:	81a3      	strh	r3, [r4, #12]
 80012a0:	4632      	mov	r2, r6
 80012a2:	463b      	mov	r3, r7
 80012a4:	4628      	mov	r0, r5
 80012a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80012aa:	f000 b817 	b.w	80012dc <_write_r>

080012ae <__sseek>:
 80012ae:	b510      	push	{r4, lr}
 80012b0:	460c      	mov	r4, r1
 80012b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012b6:	f000 f855 	bl	8001364 <_lseek_r>
 80012ba:	1c43      	adds	r3, r0, #1
 80012bc:	89a3      	ldrh	r3, [r4, #12]
 80012be:	bf15      	itete	ne
 80012c0:	6560      	strne	r0, [r4, #84]	; 0x54
 80012c2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80012c6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80012ca:	81a3      	strheq	r3, [r4, #12]
 80012cc:	bf18      	it	ne
 80012ce:	81a3      	strhne	r3, [r4, #12]
 80012d0:	bd10      	pop	{r4, pc}

080012d2 <__sclose>:
 80012d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012d6:	f000 b813 	b.w	8001300 <_close_r>
	...

080012dc <_write_r>:
 80012dc:	b538      	push	{r3, r4, r5, lr}
 80012de:	4c07      	ldr	r4, [pc, #28]	; (80012fc <_write_r+0x20>)
 80012e0:	4605      	mov	r5, r0
 80012e2:	4608      	mov	r0, r1
 80012e4:	4611      	mov	r1, r2
 80012e6:	2200      	movs	r2, #0
 80012e8:	6022      	str	r2, [r4, #0]
 80012ea:	461a      	mov	r2, r3
 80012ec:	f7ff f835 	bl	800035a <_write>
 80012f0:	1c43      	adds	r3, r0, #1
 80012f2:	d102      	bne.n	80012fa <_write_r+0x1e>
 80012f4:	6823      	ldr	r3, [r4, #0]
 80012f6:	b103      	cbz	r3, 80012fa <_write_r+0x1e>
 80012f8:	602b      	str	r3, [r5, #0]
 80012fa:	bd38      	pop	{r3, r4, r5, pc}
 80012fc:	2000008c 	.word	0x2000008c

08001300 <_close_r>:
 8001300:	b538      	push	{r3, r4, r5, lr}
 8001302:	4c06      	ldr	r4, [pc, #24]	; (800131c <_close_r+0x1c>)
 8001304:	2300      	movs	r3, #0
 8001306:	4605      	mov	r5, r0
 8001308:	4608      	mov	r0, r1
 800130a:	6023      	str	r3, [r4, #0]
 800130c:	f7ff f841 	bl	8000392 <_close>
 8001310:	1c43      	adds	r3, r0, #1
 8001312:	d102      	bne.n	800131a <_close_r+0x1a>
 8001314:	6823      	ldr	r3, [r4, #0]
 8001316:	b103      	cbz	r3, 800131a <_close_r+0x1a>
 8001318:	602b      	str	r3, [r5, #0]
 800131a:	bd38      	pop	{r3, r4, r5, pc}
 800131c:	2000008c 	.word	0x2000008c

08001320 <_fstat_r>:
 8001320:	b538      	push	{r3, r4, r5, lr}
 8001322:	4c07      	ldr	r4, [pc, #28]	; (8001340 <_fstat_r+0x20>)
 8001324:	2300      	movs	r3, #0
 8001326:	4605      	mov	r5, r0
 8001328:	4608      	mov	r0, r1
 800132a:	4611      	mov	r1, r2
 800132c:	6023      	str	r3, [r4, #0]
 800132e:	f7ff f83c 	bl	80003aa <_fstat>
 8001332:	1c43      	adds	r3, r0, #1
 8001334:	d102      	bne.n	800133c <_fstat_r+0x1c>
 8001336:	6823      	ldr	r3, [r4, #0]
 8001338:	b103      	cbz	r3, 800133c <_fstat_r+0x1c>
 800133a:	602b      	str	r3, [r5, #0]
 800133c:	bd38      	pop	{r3, r4, r5, pc}
 800133e:	bf00      	nop
 8001340:	2000008c 	.word	0x2000008c

08001344 <_isatty_r>:
 8001344:	b538      	push	{r3, r4, r5, lr}
 8001346:	4c06      	ldr	r4, [pc, #24]	; (8001360 <_isatty_r+0x1c>)
 8001348:	2300      	movs	r3, #0
 800134a:	4605      	mov	r5, r0
 800134c:	4608      	mov	r0, r1
 800134e:	6023      	str	r3, [r4, #0]
 8001350:	f7ff f83b 	bl	80003ca <_isatty>
 8001354:	1c43      	adds	r3, r0, #1
 8001356:	d102      	bne.n	800135e <_isatty_r+0x1a>
 8001358:	6823      	ldr	r3, [r4, #0]
 800135a:	b103      	cbz	r3, 800135e <_isatty_r+0x1a>
 800135c:	602b      	str	r3, [r5, #0]
 800135e:	bd38      	pop	{r3, r4, r5, pc}
 8001360:	2000008c 	.word	0x2000008c

08001364 <_lseek_r>:
 8001364:	b538      	push	{r3, r4, r5, lr}
 8001366:	4c07      	ldr	r4, [pc, #28]	; (8001384 <_lseek_r+0x20>)
 8001368:	4605      	mov	r5, r0
 800136a:	4608      	mov	r0, r1
 800136c:	4611      	mov	r1, r2
 800136e:	2200      	movs	r2, #0
 8001370:	6022      	str	r2, [r4, #0]
 8001372:	461a      	mov	r2, r3
 8001374:	f7ff f834 	bl	80003e0 <_lseek>
 8001378:	1c43      	adds	r3, r0, #1
 800137a:	d102      	bne.n	8001382 <_lseek_r+0x1e>
 800137c:	6823      	ldr	r3, [r4, #0]
 800137e:	b103      	cbz	r3, 8001382 <_lseek_r+0x1e>
 8001380:	602b      	str	r3, [r5, #0]
 8001382:	bd38      	pop	{r3, r4, r5, pc}
 8001384:	2000008c 	.word	0x2000008c

08001388 <__malloc_lock>:
 8001388:	4770      	bx	lr

0800138a <__malloc_unlock>:
 800138a:	4770      	bx	lr

0800138c <_read_r>:
 800138c:	b538      	push	{r3, r4, r5, lr}
 800138e:	4c07      	ldr	r4, [pc, #28]	; (80013ac <_read_r+0x20>)
 8001390:	4605      	mov	r5, r0
 8001392:	4608      	mov	r0, r1
 8001394:	4611      	mov	r1, r2
 8001396:	2200      	movs	r2, #0
 8001398:	6022      	str	r2, [r4, #0]
 800139a:	461a      	mov	r2, r3
 800139c:	f7fe ffc0 	bl	8000320 <_read>
 80013a0:	1c43      	adds	r3, r0, #1
 80013a2:	d102      	bne.n	80013aa <_read_r+0x1e>
 80013a4:	6823      	ldr	r3, [r4, #0]
 80013a6:	b103      	cbz	r3, 80013aa <_read_r+0x1e>
 80013a8:	602b      	str	r3, [r5, #0]
 80013aa:	bd38      	pop	{r3, r4, r5, pc}
 80013ac:	2000008c 	.word	0x2000008c

080013b0 <_init>:
 80013b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013b2:	bf00      	nop
 80013b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013b6:	bc08      	pop	{r3}
 80013b8:	469e      	mov	lr, r3
 80013ba:	4770      	bx	lr

080013bc <_fini>:
 80013bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013be:	bf00      	nop
 80013c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013c2:	bc08      	pop	{r3}
 80013c4:	469e      	mov	lr, r3
 80013c6:	4770      	bx	lr
